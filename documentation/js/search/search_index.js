var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.677,1,1.112]],["body/components/AppComponent.html",[0,0.942,1,1.695,2,1.605,3,0.305,4,0.263,5,1.371,6,1.23,7,1.371,8,1.371,9,0.263,10,2.035,11,2.227,12,2.976,13,1.371,14,2.91,15,2.356,16,2.533,17,1.983,18,4.189,19,1.983,20,3.565,21,0.349,22,0.802,23,4.189,24,4.189,25,4.189,26,4.189,27,1.605,28,3.261,29,1.004,30,2.035,31,3.17,32,1.701,33,3.565,34,1.004,35,0.039,36,1.274,37,0.567,38,0.911,39,2.465,40,1.11,41,1.983,42,1.779,43,2.09,44,2.09,45,2.533,46,2.329,47,2.465,48,1.23,49,3.788,50,2.465,51,2.227,52,3.565,53,2.465,54,0.917,55,0.615,56,2.035,57,1.54,58,2.465,59,1.371,60,3.565,61,2.533,62,1.11,63,1.752,64,1.752,65,1.752,66,1.752,67,2.035,68,2.227,69,2.465,70,2.035,71,0.305,72,0.396,73,1.371,74,2.465,75,2.465,76,2.465,77,2.465,78,2.465,79,2.465,80,3.565,81,3.565,82,3.565,83,3.565,84,2.465,85,2.465,86,2.465,87,3.565,88,3.565,89,2.465,90,1.54,91,2.533,92,2.035,93,2.943,94,3.565,95,2.035,96,4.189,97,2.616,98,3.457,99,1.54,100,2.465,101,2.465,102,1.11,103,1.983,104,1.983,105,1.371,106,2.552,107,1.371,108,1.371,109,0.826,110,1.371,111,0.911,112,1.23,113,1.983,114,0.911,115,0.505,116,0.75,117,1.23,118,1.371,119,1.371,120,0.022,121,0.022]],["title/modules/AppModule.html",[122,1.675,123,1.881]],["body/modules/AppModule.html",[0,0.486,1,2.042,3,0.267,4,0.23,9,0.23,15,0.973,35,0.039,54,1.101,55,0.539,57,1.351,59,1.203,71,0.267,72,0.347,102,0.973,109,1.683,111,1.789,114,1.789,115,0.306,116,1.472,120,0.02,121,0.02,122,1.203,123,3.643,124,0.973,125,1.203,126,2.757,127,2.757,128,3.204,129,1.537,130,1.785,131,1.785,132,1.785,133,1.785,134,1.785,135,2.693,136,2.693,137,2.673,138,1.785,139,1.785,140,2.163,141,2.301,142,2.301,143,3.238,144,2.673,145,1.537,146,2.163,147,2.163,148,3.238,149,2.163,150,1.537,151,1.937,152,0.973,153,1.785,154,3.238,155,2.163,156,3.238,157,2.163,158,3.238,159,2.163,160,3.238,161,2.163,162,3.238,163,2.163,164,3.238,165,2.163,166,3.238,167,2.163,168,3.238,169,2.163,170,3.238,171,1.785,172,1.537,173,3.238,174,2.163,175,3.238,176,1.785,177,3.238,178,2.163,179,3.238,180,1.785,181,3.238,182,2.163,183,3.238,184,2.163,185,3.238,186,2.163,187,2.163,188,3.238,189,2.163,190,3.238,191,2.163,192,1.785,193,3.238,194,2.163,195,3.238,196,3.238,197,3.238,198,3.238,199,1.537,200,2.163,201,2.163,202,2.163,203,1.537,204,2.301,205,2.301,206,2.301,207,2.301,208,2.163,209,1.351,210,2.163,211,2.163,212,1.537,213,3.238,214,1.785,215,1.203,216,1.537,217,2.163,218,1.537,219,1.351,220,2.301,221,1.785,222,2.163,223,2.163,224,2.163,225,1.785,226,2.163,227,1.203,228,0.725,229,0.799,230,2.163,231,2.163,232,2.163,233,2.163,234,1.785]],["title/modules/AppRoutingModule.html",[122,1.675,135,1.675]],["body/modules/AppRoutingModule.html",[0,1.112,3,0.496,4,0.427,9,0.427,35,0.039,54,1.011,55,1,71,0.496,72,0.644,109,1.657,116,1.503,120,0.03,121,0.03,124,1.806,129,2.851,135,2.749,141,2.851,142,3.513,150,3.513,151,2.674,152,1.806,153,3.313,214,3.313,215,2.231,216,2.851,219,2.507,220,3.513,221,3.313,225,3.313,235,4.013,236,4.013]],["title/interceptors/ErrorInterceptor.html",[136,1.675,237,2.486]],["body/interceptors/ErrorInterceptor.html",[3,0.436,4,0.376,9,0.376,11,2.204,21,0.5,27,2.052,29,1.437,32,1.528,34,1.857,35,0.038,36,1.386,37,0.564,38,1.684,40,1.588,46,2.808,54,0.965,55,0.88,62,1.588,71,0.436,72,0.567,73,1.962,120,0.028,121,0.028,136,2.535,199,2.507,238,2.913,239,2.913,240,4.559,241,3.529,242,2.664,243,3.529,244,3.239,245,4.559,246,5.338,247,5.05,248,5.338,249,3.529,250,3.529,251,4.559,252,3.529,253,4.559,254,1.857,255,2.507,256,4.559,257,3.529,258,2.535,259,3.529,260,3.529,261,3.529,262,4.559,263,3.763,264,1.684,265,2.507]],["title/interfaces/FollowersState.html",[266,0.677,267,1.356]],["body/interfaces/FollowersState.html",[3,0.47,4,0.405,9,0.405,21,0.538,22,1.075,35,0.038,37,0.646,42,2.88,54,0.864,71,0.678,115,0.83,120,0.029,121,0.029,228,1.839,229,1.404,264,2.132,266,1.234,267,2.152,268,1.711,269,2.114,270,2.114,271,2.637,272,2.152,273,2.375,274,2.114,275,1.711,276,1.549,277,1.711,278,1.711]],["title/injectables/GithubEffects.html",[209,1.881,254,1.227]],["body/injectables/GithubEffects.html",[3,0.283,4,0.244,9,0.244,21,0.325,22,0.76,29,1.377,32,1.658,34,0.934,35,0.039,36,0.697,37,0.283,38,0.847,43,2.359,44,2.359,54,0.894,55,0.571,61,1.629,62,1.032,71,0.283,72,0.368,115,0.479,120,0.021,121,0.021,203,1.629,209,2.112,228,1.133,229,1.249,254,1.377,255,1.629,258,2.466,264,1.249,276,1.806,279,1.432,280,1.892,281,2.509,282,2.509,283,2.509,284,2.854,285,3.316,286,2.293,287,4.948,288,2.845,289,2.293,290,5.53,291,5.453,292,3.381,293,5.453,294,3.381,295,3.381,296,3.381,297,3.381,298,3.381,299,2.293,300,3.381,301,3.381,302,3.381,303,3.381,304,2.293,305,3.381,306,3.381,307,3.381,308,3.381,309,2.293,310,3.381,311,3.381,312,3.381,313,3.381,314,4.434,315,2.791,316,3.381,317,2.293,318,3.381,319,3.381,320,3.381,321,2.112,322,3.381,323,3.381,324,3.381,325,4.017,326,2.293,327,2.293,328,1.629,329,2.293,330,2.293,331,2.293,332,1.892,333,2.293,334,2.112]],["title/injectables/GithubService.html",[254,1.227,288,1.675]],["body/injectables/GithubService.html",[3,0.356,4,0.307,9,0.307,16,2.045,21,0.408,22,0.894,27,1.791,29,1.172,32,1.834,34,2.174,35,0.038,36,1.623,37,0.66,38,1.972,40,2.323,43,1.436,44,1.436,46,3.218,48,2.913,54,0.933,55,0.717,62,1.296,71,0.356,72,0.462,73,1.601,115,0.408,120,0.024,121,0.024,199,2.045,254,1.62,258,2.87,274,1.601,279,1.798,285,3.284,288,2.212,334,2.848,335,2.376,336,4.559,337,3.978,338,3.978,339,3.978,340,3.978,341,2.878,342,4.918,343,3.978,344,3.284,345,3.978,346,2.878,347,3.072,348,3.978,349,2.878,350,3.978,351,2.878,352,3.978,353,2.664,354,2.878,355,2.376,356,3.978,357,2.878,358,3.978,359,1.798,360,2.878,361,2.376,362,2.878,363,2.878,364,2.878,365,2.878,366,2.878]],["title/interfaces/GithubState.html",[266,0.677,275,1.356]],["body/interfaces/GithubState.html",[3,0.47,4,0.405,9,0.405,21,0.538,22,1.075,35,0.038,37,0.646,42,2.88,54,0.864,71,0.678,115,0.83,120,0.029,121,0.029,228,1.274,229,1.404,264,2.132,266,1.234,267,1.711,268,1.711,269,2.114,270,2.114,271,2.637,272,2.152,273,2.375,274,2.114,275,2.152,276,2.235,277,1.711,278,1.711]],["title/components/HomeComponent.html",[0,0.677,109,1.009]],["body/components/HomeComponent.html",[0,0.79,1,0.68,2,1.289,3,0.228,4,0.196,5,1.024,6,0.919,7,1.024,8,1.024,9,0.196,11,1.789,12,2.497,13,1.024,14,2.639,15,2.136,17,1.592,19,1.592,21,0.261,22,0.644,27,1.289,28,2.816,29,1.166,31,2.964,32,1.786,34,1.615,35,0.039,36,1.382,37,0.637,38,1.464,40,1.784,41,2.388,43,2.143,44,2.269,46,2.639,48,1.429,51,2.476,54,0.976,55,0.459,56,2.901,57,1.15,59,1.024,61,1.308,62,0.829,67,1.52,71,0.228,72,0.296,91,2.816,95,1.52,97,1.15,102,0.829,103,1.592,104,1.592,105,1.024,106,2.204,107,1.024,108,1.024,109,1.328,110,1.024,111,0.68,112,0.919,113,1.592,114,0.68,115,0.498,116,0.56,117,0.919,118,1.024,119,1.024,120,0.018,121,0.018,152,0.829,176,1.52,180,1.52,242,1.978,244,2.497,255,1.308,258,1.024,265,1.308,276,1.615,288,2.639,315,1.52,321,1.15,328,1.308,332,1.52,334,2.476,347,1.15,353,1.429,355,3.545,367,1.52,368,2.864,369,3.514,370,2.864,371,3.514,372,2.528,373,3.514,374,3.514,375,3.514,376,2.864,377,2.864,378,2.84,379,1.52,380,3.23,381,2.864,382,1.841,383,2.864,384,3.964,385,1.841,386,4.547,387,2.864,388,3.964,389,1.841,390,2.864,391,3.514,392,3.964,393,1.841,394,1.841,395,3.514,396,1.841,397,2.476,398,1.841,399,1.841,400,1.841,401,1.841,402,1.841,403,2.864,404,1.841,405,1.841,406,1.841,407,1.841,408,1.841,409,1.841,410,1.308,411,1.841,412,1.308,413,1.841,414,1.308,415,1.308,416,1.841,417,1.841,418,1.841,419,1.841,420,1.841,421,1.841,422,1.841,423,1.841,424,1.841,425,1.52,426,1.841,427,1.841,428,1.841,429,2.864,430,1.841,431,1.841,432,1.841,433,1.308,434,1.841,435,2.864,436,2.864,437,1.841,438,1.841,439,1.841,440,1.841,441,1.841,442,1.841,443,2.864,444,1.841,445,1.841,446,1.308,447,1.52]],["title/classes/PaginatedResult.html",[72,0.484,448,1.881]],["body/classes/PaginatedResult.html",[3,0.514,4,0.443,9,0.443,21,0.589,22,1.136,32,1.694,35,0.037,37,0.625,38,2.091,71,0.625,72,0.668,120,0.031,121,0.031,266,0.935,353,2.716,372,3.281,412,2.955,414,2.955,415,2.955,448,3.157,449,4.159,450,2.955,451,4.494,452,4.159,453,4.171,454,4.159]],["title/interfaces/Pagination.html",[266,0.677,372,1.675]],["body/interfaces/Pagination.html",[3,0.509,4,0.439,9,0.439,21,0.584,22,1.13,35,0.037,37,0.67,71,0.621,72,0.662,120,0.031,121,0.031,266,0.927,268,1.855,353,3.024,372,3.139,412,4.011,414,4.011,415,4.011,448,2.574,450,2.928,451,3.402,453,3.402]],["title/components/RepositoryCardComponent.html",[0,0.677,111,1.112]],["body/components/RepositoryCardComponent.html",[0,1.007,1,1.029,2,1.75,3,0.344,4,0.297,5,1.549,6,1.39,7,1.549,8,1.549,9,0.297,13,1.549,14,3.015,15,2.441,17,2.162,19,2.162,21,0.394,32,0.933,35,0.039,36,1.182,37,0.344,54,0.703,55,0.694,71,0.344,72,0.447,90,3.029,93,2.299,99,1.74,102,1.254,103,2.162,104,2.162,105,1.549,106,2.696,107,1.549,108,1.549,109,0.933,110,1.549,111,1.791,112,2.871,113,2.162,114,1.029,115,0.551,116,0.847,117,1.39,118,1.549,119,1.549,120,0.024,121,0.024,218,2.763,227,2.162,272,2.016,397,2.429,455,3.21,456,1.979,457,3.21,458,3.698,459,3.21,460,3.21,461,2.785,462,3.21,463,2.299,464,3.888,465,3.888,466,3.888,467,3.888,468,2.763,469,3.888,470,3.888,471,3.888,472,3.888,473,3.888,474,3.888,475,3.888,476,2.785,477,2.785,478,3.183,479,2.785,480,2.299,481,2.299,482,1.979,483,3.21,484,3.21,485,2.785,486,2.299,487,2.785,488,2.785,489,1.979,490,1.74,491,2.785,492,2.763,493,2.785,494,2.299]],["title/interfaces/RepositoryState.html",[266,0.677,278,1.356]],["body/interfaces/RepositoryState.html",[3,0.47,4,0.405,9,0.405,21,0.538,22,1.075,35,0.038,37,0.646,42,2.88,54,0.864,71,0.678,115,0.801,120,0.029,121,0.029,228,1.274,229,2.027,264,2.132,266,1.234,267,1.711,268,1.711,269,2.114,270,2.114,271,2.637,272,2.47,273,2.375,274,2.114,275,1.711,276,1.549,277,1.711,278,2.152]],["title/injectables/ToastService.html",[242,1.503,254,1.227]],["body/injectables/ToastService.html",[3,0.438,4,0.378,9,0.378,16,2.52,21,0.502,27,2.059,29,1.445,32,1.697,34,2.062,35,0.038,36,1.539,37,0.626,38,1.87,40,2.059,41,2.544,48,2.829,54,0.827,55,0.884,71,0.438,72,0.57,73,1.972,120,0.028,121,0.028,171,2.928,172,2.52,242,2.282,254,1.863,264,1.87,279,2.216,361,2.928,495,2.928,496,4.179,497,3.547,498,5.349,499,3.547,500,5.349,501,4.574,502,3.547,503,4.574,504,4.574,505,3.547,506,4.574,507,4.574,508,4.574,509,4.574,510,4.574]],["title/interfaces/User.html",[115,0.426,266,0.677]],["body/interfaces/User.html",[3,0.258,4,0.222,9,0.222,21,0.295,22,0.708,35,0.038,36,1.381,37,0.761,42,2.607,48,3.127,71,0.258,115,0.446,120,0.019,121,0.019,228,1.417,266,0.469,268,0.938,353,3.022,490,1.302,511,1.72,512,3.491,513,3.491,514,3.491,515,3.748,516,3.491,517,3.491,518,3.491,519,3.491,520,3.491,521,3.491,522,3.005,523,3.491,524,3.491,525,3.491,526,3.491,527,3.491,528,3.491,529,3.491,530,3.491,531,3.491,532,3.491,533,3.491,534,3.491,535,3.491,536,3.491,537,3.491,538,3.491,539,3.491,540,3.491,541,3.491,542,3.491,543,3.491,544,3.491,545,3.491,546,3.491,547,3.491,548,2.599,549,1.72]],["title/components/UserCardComponent.html",[0,0.677,114,1.112]],["body/components/UserCardComponent.html",[0,1.012,1,1.037,2,1.76,3,0.347,4,0.299,5,1.561,6,1.401,7,1.561,8,1.561,9,0.299,13,1.561,14,3.022,15,2.446,17,2.174,19,2.174,21,0.398,27,1.76,29,1.144,32,1.508,34,1.144,35,0.038,36,1.368,37,0.483,38,1.037,40,1.264,41,1.561,54,0.813,55,0.7,71,0.347,72,0.451,73,1.561,90,2.443,97,1.754,99,1.754,102,1.264,103,2.174,104,2.174,105,1.561,106,2.706,107,1.561,108,1.561,109,0.941,110,1.561,111,1.037,112,1.401,113,2.174,114,1.797,115,0.847,116,0.854,117,1.401,118,1.561,119,1.561,120,0.024,121,0.024,152,1.264,212,3.457,227,2.502,379,2.318,380,3.764,397,2.443,433,1.995,446,1.995,456,1.995,457,4.017,458,3.714,459,3.228,460,3.228,462,3.228,478,1.995,482,1.995,489,1.995,492,2.778,550,4.017,551,4.017,552,3.91,553,2.808,554,2.318,555,2.808,556,3.91,557,3.714,558,3.91,559,2.808,560,3.228,561,3.91,562,3.228,563,2.318,564,2.318,565,2.318,566,2.318,567,2.808,568,2.808,569,2.808]],["title/components/UserDetailsComponent.html",[0,0.677,116,0.916]],["body/components/UserDetailsComponent.html",[0,0.754,1,0.633,2,1.218,3,0.212,4,0.182,5,0.952,6,0.855,7,0.952,8,0.952,9,0.182,11,1.69,12,2.383,13,0.952,14,2.568,15,2.079,17,1.505,19,1.505,21,0.243,22,0.608,27,1.218,28,2.707,29,1.102,30,1.414,31,2.755,32,1.651,34,1.102,35,0.039,36,1.158,37,0.471,38,0.999,40,1.51,41,2.307,43,1.901,44,1.901,45,1.217,46,2.568,48,1.35,51,2.755,54,0.912,55,0.427,59,0.952,62,0.771,68,1.69,70,1.414,71,0.212,72,0.275,90,2.095,92,1.414,97,2.095,98,1.414,99,1.69,102,0.771,103,1.505,104,1.505,105,0.952,106,2.119,107,0.952,108,0.952,109,0.574,110,0.952,111,0.633,112,0.855,113,1.505,114,0.633,115,0.796,116,1.158,117,1.901,118,0.952,119,0.952,120,0.017,121,0.017,152,0.771,215,2.806,219,1.07,228,1.39,229,1.239,242,1.901,244,2.383,258,1.505,265,1.217,271,0.771,272,0.771,281,1.07,282,1.07,283,1.07,328,1.217,334,2.885,347,2.99,353,1.901,380,3.281,397,1.69,433,1.217,446,1.217,447,1.414,463,1.414,478,1.922,480,1.414,481,1.414,482,1.922,483,2.768,484,1.414,486,1.414,489,1.217,490,1.07,492,1.922,494,1.414,522,2.707,551,2.233,554,1.414,560,3.145,562,2.233,563,1.414,564,1.414,565,1.414,566,1.414,570,4.166,571,1.414,572,3.354,573,3.354,574,2.706,575,3.354,576,3.354,577,3.81,578,3.354,579,3.81,580,2.706,581,1.713,582,1.713,583,2.706,584,1.713,585,1.713,586,1.713,587,3.354,588,1.713,589,1.713,590,1.713,591,1.713,592,1.217,593,1.217,594,1.217,595,1.713,596,1.713,597,1.713,598,1.713,599,2.706,600,1.713,601,1.713,602,1.713,603,1.713,604,1.713,605,1.713,606,1.713,607,1.713,608,1.713,609,1.713,610,1.713,611,1.713,612,1.713,613,1.713,614,3.354,615,1.713,616,2.706,617,2.706,618,2.706,619,2.706,620,2.706,621,2.706,622,2.706,623,2.706,624,2.706,625,1.713,626,1.713,627,2.706,628,1.713,629,3.81,630,1.713,631,1.713,632,2.706,633,1.713,634,1.713,635,2.706,636,1.713,637,1.713,638,1.713,639,1.713,640,1.713,641,1.713,642,1.713,643,1.713,644,1.713,645,1.713,646,2.706]],["title/interfaces/UserState.html",[266,0.677,277,1.356]],["body/interfaces/UserState.html",[3,0.477,4,0.411,9,0.411,21,0.546,22,1.084,35,0.038,37,0.596,42,2.89,54,0.871,71,0.682,115,0.854,120,0.03,121,0.03,228,1.292,229,1.424,264,1.944,266,1.24,267,1.735,268,1.735,269,2.144,270,2.144,271,2.645,272,2.171,273,2.408,274,2.144,275,1.735,276,1.57,277,2.171,278,1.735]],["title/modules/UsersModule.html",[122,1.675,647,2.14]],["body/modules/UsersModule.html",[0,0.913,3,0.502,4,0.433,9,0.433,35,0.039,54,1.015,55,1.012,71,0.502,72,0.652,115,0.575,116,1.514,120,0.031,121,0.031,124,1.828,126,2.885,141,2.885,142,3.538,150,2.885,151,2.688,152,1.828,215,2.258,216,2.885,219,2.536,220,2.885,647,3.538,648,4.06,649,4.98,650,3.352,651,4.06]],["title/coverage.html",[652,3.388]],["body/coverage.html",[0,1.052,1,0.826,9,0.238,10,1.846,35,0.038,37,0.276,51,1.397,63,1.589,64,1.589,65,1.589,66,1.589,68,1.397,72,0.359,109,0.75,111,0.826,114,0.826,115,0.317,116,0.68,120,0.02,121,0.02,136,1.244,204,1.589,205,1.589,206,1.589,207,1.589,209,1.397,212,1.589,215,1.244,218,1.589,237,1.846,239,1.846,242,1.116,254,1.613,266,1.141,267,1.007,269,2.436,270,2.436,272,1.007,275,1.007,277,1.007,278,1.007,280,1.846,281,1.397,282,1.397,283,1.397,284,1.589,288,1.244,321,3.882,335,1.846,359,2.074,367,1.846,372,1.244,378,1.397,410,1.589,448,1.397,450,2.359,455,1.846,456,2.359,495,1.846,511,1.846,550,1.846,570,1.846,571,1.846,592,1.589,593,1.589,594,1.589,652,1.846,653,1.846,654,2.237,655,2.237,656,3.32,657,3.959,658,4.903,659,2.237,660,2.237,661,2.237,662,2.237,663,4.474,664,6.111,665,6.111,666,1.846,667,1.846,668,1.846,669,1.846,670,1.846,671,4.304,672,1.846,673,1.846,674,1.846,675,1.846,676,4.596,677,1.846,678,1.846,679,1.846,680,1.846,681,2.237,682,1.846,683,2.237,684,2.237,685,1.846,686,1.846,687,2.741,688,1.846,689,1.846,690,2.237,691,2.237]],["title/dependencies.html",[125,2.013,692,2.079]],["body/dependencies.html",[31,2.388,35,0.039,55,0.953,57,2.388,59,2.668,62,1.721,120,0.03,121,0.03,125,2.126,127,3.409,144,3.96,145,3.409,152,1.721,203,2.716,650,3.156,693,3.156,694,3.823,695,3.823,696,3.823,697,3.823,698,3.823,699,5.932,700,3.823,701,4.798,702,3.823,703,3.823,704,3.156,705,5.664,706,3.823,707,3.823,708,3.823,709,3.823,710,3.823,711,3.823,712,3.823,713,3.823,714,3.823,715,3.823,716,3.823,717,3.823,718,3.823]],["title/index.html",[21,0.357,719,2.079,720,2.079]],["body/index.html",[2,2.135,4,0.282,6,1.323,15,1.69,35,0.023,37,0.328,49,3.1,112,1.323,115,0.736,117,2.176,120,0.029,121,0.023,124,1.193,125,1.474,172,1.883,192,2.188,227,1.474,228,1.259,229,1.387,238,3.6,263,3.6,264,0.979,271,2.135,276,1.08,344,2.188,347,1.656,359,1.656,378,2.963,425,2.188,468,1.883,557,3.1,653,2.188,693,3.6,704,2.188,719,2.188,720,2.188,721,2.651,722,2.668,723,2.651,724,2.651,725,2.651,726,2.651,727,3.755,728,3.755,729,2.651,730,3.755,731,2.651,732,3.755,733,3.6,734,2.651,735,4.361,736,4.744,737,3.755,738,2.651,739,3.755,740,3.755,741,5.463,742,2.651,743,2.651,744,2.651,745,3.755,746,2.651,747,2.651,748,2.651,749,3.755,750,2.651,751,2.651,752,2.651,753,2.651,754,3.755,755,3.755,756,3.755,757,2.651,758,2.651,759,2.651,760,3.755,761,3.755,762,2.651,763,3.916,764,4.361,765,3.755,766,2.651,767,2.651,768,2.651,769,3.755,770,2.651,771,2.651,772,3.755,773,2.651,774,2.651,775,2.651,776,3.755,777,2.651,778,2.651,779,4.744,780,2.188,781,2.651,782,2.651,783,2.651,784,2.651,785,2.651,786,2.651,787,2.651,788,2.651,789,2.651,790,2.651,791,2.651,792,2.651,793,2.651,794,2.651,795,2.651,796,2.651,797,2.651,798,2.651,799,2.651,800,2.651,801,2.651,802,2.651,803,2.651,804,2.651,805,2.651,806,2.651,807,2.651,808,2.651,809,2.651,810,2.651,811,2.651,812,2.651,813,2.651,814,3.1,815,2.651,816,2.651,817,3.755,818,2.651,819,2.651,820,2.651,821,3.755,822,2.651,823,2.651,824,2.651,825,2.651,826,2.651,827,2.651,828,2.651,829,2.651,830,2.651,831,2.651,832,2.651,833,3.755,834,2.651,835,2.651,836,2.651,837,2.651,838,3.755,839,2.651,840,2.651,841,2.651,842,2.651,843,2.651,844,2.651,845,2.651,846,2.651,847,2.651]],["title/modules.html",[124,1.847]],["body/modules.html",[35,0.033,120,0.033,121,0.033,123,2.886,124,2.079,135,2.569,145,3.282,468,3.822,647,3.282,848,4.62,849,4.62,850,5.692,851,5.38]],["title/overview.html",[722,2.916]],["body/overview.html",[1,2.162,2,1.707,35,0.037,72,0.609,91,2.694,102,1.707,109,1.75,111,1.929,114,1.929,116,1.588,120,0.029,121,0.029,122,2.108,123,3.863,124,1.707,125,2.108,126,2.694,127,2.694,128,3.13,129,2.694,130,3.13,131,3.13,132,3.13,133,3.13,134,3.13,135,2.904,136,2.904,137,3.94,138,3.13,139,3.13,151,1.892,268,1.707,279,2.368,722,2.694,852,4.773,853,3.792,854,3.792,855,3.792]],["title/properties.html",[22,0.814,692,2.079]],["body/properties.html",[22,1.075,35,0.036,120,0.034,121,0.034,733,3.946,856,4.781]],["title/routes.html",[151,2.048]],["body/routes.html",[35,0.034,120,0.034,121,0.034,151,2.411]],["title/miscellaneous/variables.html",[857,2.079,858,2.989]],["body/miscellaneous/variables.html",[21,0.209,35,0.039,36,0.731,37,0.58,43,2.924,44,2.924,45,3.635,63,1.707,64,1.707,65,1.707,66,1.707,68,1.501,115,0.545,120,0.015,121,0.015,204,1.707,205,1.707,206,1.707,207,1.707,227,2.68,228,1.458,229,1.524,234,3.592,264,1.422,267,1.367,271,2.337,275,1.082,276,1.91,277,1.367,278,1.367,281,1.501,282,1.501,283,1.501,284,1.707,321,3.196,359,2.186,378,1.501,410,1.707,490,0.923,496,2.889,512,1.219,513,1.219,514,1.219,515,1.984,516,1.219,517,1.219,518,1.219,519,1.219,520,1.219,521,1.219,522,1.049,523,1.219,524,1.219,525,1.219,526,1.219,527,1.219,528,1.219,529,1.219,530,1.219,531,1.219,532,1.219,533,1.219,534,1.219,535,1.219,536,1.219,537,1.219,538,1.219,539,1.219,540,1.219,541,1.219,542,1.219,543,1.219,544,1.219,545,1.219,546,1.219,547,1.219,548,1.219,549,1.219,592,1.707,593,1.707,594,1.707,663,1.219,666,1.984,667,1.984,668,1.984,669,1.984,670,1.984,671,1.219,672,2.507,673,2.507,674,2.507,675,2.507,676,1.219,677,2.889,678,2.889,679,2.889,680,2.889,682,1.219,685,1.219,686,1.219,687,1.219,688,1.984,689,1.984,763,4.81,780,1.984,814,3.979,857,1.219,858,1.219,859,2.403,860,1.477,861,1.477,862,4.535,863,4.82,864,5.031,865,1.477,866,1.477,867,1.477,868,2.403,869,1.477,870,1.477,871,2.403,872,3.5,873,1.477,874,1.477,875,1.477,876,1.477,877,1.477,878,1.477,879,3.038,880,1.477,881,1.477,882,1.477,883,1.477,884,1.477,885,4.82,886,4.82,887,4.82,888,1.477,889,4.535,890,3.5,891,2.403,892,2.403,893,1.477,894,2.403,895,1.477,896,1.477,897,1.477,898,2.403,899,2.403,900,1.477,901,1.477,902,1.477,903,1.477]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":321,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.11.4",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["0/80",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":856,"title":{},"body":{"properties.html":{}}}],["100",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["100px",{"_index":561,"title":{},"body":{"components/UserCardComponent.html":{}}}],["100vh",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["10px",{"_index":494,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["12",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["13.2.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["13.3.5",{"_index":734,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["130px",{"_index":569,"title":{},"body":{"components/UserCardComponent.html":{}}}],["2",{"_index":855,"title":{},"body":{"overview.html":{}}}],["2.6.2",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":510,"title":{},"body":{"injectables/ToastService.html":{}}}],["200px",{"_index":646,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["20px",{"_index":626,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["24px",{"_index":485,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["2px",{"_index":564,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["3",{"_index":852,"title":{},"body":{"overview.html":{}}}],["300",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["300px",{"_index":627,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["4px",{"_index":487,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["5",{"_index":853,"title":{},"body":{"overview.html":{}}}],["5.1.3",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["576px",{"_index":636,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["5px",{"_index":633,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["7",{"_index":854,"title":{},"body":{"overview.html":{}}}],["7.0.1",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["8.56.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["accessible",{"_index":788,"title":{},"body":{"index.html":{}}}],["action.since).pipe",{"_index":312,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["action.username",{"_index":319,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["action.username.trim().length",{"_index":320,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["actions",{"_index":287,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["activatedroute",{"_index":579,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["actual_component",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["advanced",{"_index":759,"title":{},"body":{"index.html":{}}}],["again",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":480,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["allows",{"_index":748,"title":{},"body":{"index.html":{}}}],["angular",{"_index":693,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":650,"title":{},"body":{"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubService.html":{}}}],["angular/compiler",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["angular/material/button",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["angular/material/progress",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"injectables/ToastService.html":{}}}],["angular/material/tabs",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["animate('0.5s",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animated",{"_index":816,"title":{},"body":{"index.html":{}}}],["animatestate",{"_index":575,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["animation",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["animations",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["api",{"_index":814,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":336,"title":{},"body":{"injectables/GithubService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["app.component",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":741,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":123,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":135,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["assets",{"_index":842,"title":{},"body":{"index.html":{}}}],["auto",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["automatically",{"_index":742,"title":{},"body":{"index.html":{}}}],["available",{"_index":468,"title":{},"body":{"components/RepositoryCardComponent.html":{},"index.html":{},"modules.html":{}}}],["avatar",{"_index":559,"title":{},"body":{"components/UserCardComponent.html":{}}}],["avatar_url",{"_index":512,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["baseurl:'https://api.github.com",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basic",{"_index":823,"title":{},"body":{"index.html":{}}}],["bedtime",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":491,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["bio",{"_index":513,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":641,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["blog",{"_index":514,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{}}}],["bootstrap",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":562,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["bottom",{"_index":640,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["brightness_5",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":850,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations';import",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":779,"title":{},"body":{"index.html":{}}}],["building",{"_index":778,"title":{},"body":{"index.html":{}}}],["call_split",{"_index":471,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["calls",{"_index":834,"title":{},"body":{"index.html":{}}}],["card",{"_index":457,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["card'},{'name",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["card.component",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":459,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["card.component.scss",{"_index":458,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["card.component.ts",{"_index":456,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:11",{"_index":461,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["card.component.ts:12",{"_index":552,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:16",{"_index":553,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card/repository",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/RepositoryCardComponent.html":{},"coverage.html":{}}}],["card/user",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":812,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":255,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["catcherror((error",{"_index":260,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":315,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["cd",{"_index":774,"title":{},"body":{"index.html":{}}}],["center",{"_index":482,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["change",{"_index":744,"title":{},"body":{"index.html":{}}}],["class",{"_index":72,"title":{"classes/PaginatedResult.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":449,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["cli",{"_index":732,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":789,"title":{},"body":{"index.html":{}}}],["clone",{"_index":772,"title":{},"body":{"index.html":{}}}],["close",{"_index":507,"title":{},"body":{"injectables/ToastService.html":{}}}],["cluster_appmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":827,"title":{},"body":{"index.html":{}}}],["collaborators",{"_index":515,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["column",{"_index":638,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["comand",{"_index":726,"title":{},"body":{"index.html":{}}}],["combinelatest",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["commonmodule",{"_index":649,"title":{},"body":{"modules/UsersModule.html":{}}}],["communicating",{"_index":262,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["company",{"_index":516,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["compodoc:serve",{"_index":729,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["component_template",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{},"overview.html":{}}}],["components/color",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["configuration",{"_index":847,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":802,"title":{},"body":{"index.html":{}}}],["console.error('error",{"_index":261,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log(c",{"_index":296,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["const",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["constructor(actions",{"_index":286,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["constructor(http",{"_index":341,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(private",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{}}}],["constructor(router",{"_index":379,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{}}}],["constructor(snackbar",{"_index":497,"title":{},"body":{"injectables/ToastService.html":{}}}],["constructor(store",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["constructor(toast",{"_index":241,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["content",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["context",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":770,"title":{},"body":{"index.html":{}}}],["core/interceptors/error.interceptor",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interfaces/pagination",{"_index":405,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/models/user",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/services/github.service",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/services/toast.service",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/store/github.actions",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/store/github.effects",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["core/store/github.reducer",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["core/store/github.selector",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":652,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created_at",{"_index":517,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["createeffect",{"_index":290,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["createreducer",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpage",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["cursor",{"_index":567,"title":{},"body":{"components/UserCardComponent.html":{}}}],["dark",{"_index":796,"title":{},"body":{"index.html":{}}}],["data",{"_index":810,"title":{},"body":{"index.html":{}}}],["ddd",{"_index":566,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["debouncetime",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["debouncetime(600",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{}}}],["declarations",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["default",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["dependencies",{"_index":125,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":467,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["design",{"_index":755,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":791,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":723,"title":{},"body":{"index.html":{}}}],["details",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["details.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["details.component.html",{"_index":574,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.scss",{"_index":573,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts",{"_index":571,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:19",{"_index":589,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":585,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":586,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":588,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":580,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:36",{"_index":582,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:58",{"_index":584,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:62",{"_index":581,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details/user",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["dev",{"_index":738,"title":{},"body":{"index.html":{}}}],["development",{"_index":735,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["direction",{"_index":637,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["directive",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["directives",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["directory",{"_index":773,"title":{},"body":{"index.html":{}}}],["disk_usage",{"_index":518,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":478,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["displays",{"_index":749,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":653,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["duration",{"_index":509,"title":{},"body":{"injectables/ToastService.html":{}}}],["dynamic",{"_index":704,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["dynamically",{"_index":804,"title":{},"body":{"index.html":{}}}],["ease",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([githubeffects",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["ellipsis",{"_index":645,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["email",{"_index":519,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["emphasizes",{"_index":753,"title":{},"body":{"index.html":{}}}],["empty",{"_index":325,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["enhance",{"_index":819,"title":{},"body":{"index.html":{}}}],["environment",{"_index":359,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":358,"title":{},"body":{"injectables/GithubService.html":{}}}],["error",{"_index":264,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error(message",{"_index":501,"title":{},"body":{"injectables/ToastService.html":{}}}],["errorinterceptor",{"_index":136,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":815,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["event",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.option.value",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.pageindex",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.pagesize",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{}}}],["events_url",{"_index":520,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":820,"title":{},"body":{"index.html":{}}}],["export",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["failure",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":760,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["files",{"_index":745,"title":{},"body":{"index.html":{}}}],["filter",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{}}}],["filter(value",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["flex",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["folder",{"_index":831,"title":{},"body":{"index.html":{}}}],["followers",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["followers_url",{"_index":521,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["followersreducer",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["followersstate",{"_index":267,"title":{"interfaces/FollowersState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":522,"title":{},"body":{"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["following>div",{"_index":639,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["following_url",{"_index":523,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":488,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["formcontrol",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["formcontrol(false",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["formsmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["friendly",{"_index":746,"title":{},"body":{"index.html":{}}}],["function",{"_index":598,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["functionality",{"_index":782,"title":{},"body":{"index.html":{}}}],["gap",{"_index":493,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["generated",{"_index":731,"title":{},"body":{"index.html":{}}}],["getting",{"_index":719,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuserdetails",{"_index":337,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserdetails(username",{"_index":345,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserfollowers",{"_index":338,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserfollowers(username",{"_index":348,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserrepos",{"_index":339,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserrepos(username",{"_index":350,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusers",{"_index":340,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusers(pagesize",{"_index":352,"title":{},"body":{"injectables/GithubService.html":{}}}],["ghp_oux4nrfor5rw1oyekcambskcxrhntg2edmng",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gists_url",{"_index":524,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["git",{"_index":769,"title":{},"body":{"index.html":{}}}],["github",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["github.actions",{"_index":333,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions",{"_index":332,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["githubactions.loadfollowerssuccess",{"_index":298,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions.loadrepositoriessuccess",{"_index":303,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions.loaduserssuccess",{"_index":314,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions.loadusersuccess",{"_index":308,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubeffects",{"_index":209,"title":{"injectables/GithubEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/GithubEffects.html":{},"coverage.html":{}}}],["githubitat",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["githubreducer",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubrepository",{"_index":272,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["githubservice",{"_index":288,"title":{"injectables/GithubService.html":{}},"body":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["githubstate",{"_index":275,"title":{"interfaces/GithubState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":844,"title":{},"body":{"index.html":{}}}],["graph",{"_index":851,"title":{},"body":{"modules.html":{}}}],["gravatar_id",{"_index":525,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["handle",{"_index":813,"title":{},"body":{"index.html":{}}}],["handling",{"_index":811,"title":{},"body":{"index.html":{}}}],["header",{"_index":799,"title":{},"body":{"index.html":{}}}],["height",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["hidden",{"_index":632,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["hireable",{"_index":526,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":368,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["home.component.html",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":369,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":109,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepage",{"_index":783,"title":{},"body":{"index.html":{}}}],["html",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["html_url",{"_index":527,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":344,"title":{},"body":{"injectables/GithubService.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":740,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":342,"title":{},"body":{"injectables/GithubService.html":{}}}],["httpclientmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":251,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":252,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httphandler",{"_index":248,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpinterceptor",{"_index":253,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httprequest",{"_index":246,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["icon",{"_index":486,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["id",{"_index":528,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":624,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["images",{"_index":843,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":798,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["import",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{}}}],["import('./users/users.module').then(m",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["improve",{"_index":805,"title":{},"body":{"index.html":{}}}],["including",{"_index":751,"title":{},"body":{"index.html":{}}}],["incorporates",{"_index":758,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":809,"title":{},"body":{"index.html":{}}}],["indicators",{"_index":807,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{}}}],["initialfollowersstate",{"_index":672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialrepositorystate",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialstate",{"_index":674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialuserstate",{"_index":675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":254,"title":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectables",{"_index":279,"title":{},"body":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{},"overview.html":{}}}],["input",{"_index":462,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["inputs",{"_index":460,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["install",{"_index":776,"title":{},"body":{"index.html":{}}}],["installation",{"_index":771,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":240,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["intercept(request",{"_index":245,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["interceptor",{"_index":237,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":238,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["interface",{"_index":266,"title":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["interfaces",{"_index":268,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"overview.html":{}}}],["isdark",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["isdarkside",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":481,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["itemsperpage",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["justify",{"_index":489,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["key",{"_index":826,"title":{},"body":{"index.html":{}}}],["later",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["layout/animations",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["lazy",{"_index":765,"title":{},"body":{"index.html":{}}}],["left",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["legend",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"overview.html":{}}}],["light",{"_index":795,"title":{},"body":{"index.html":{}}}],["lists",{"_index":752,"title":{},"body":{"index.html":{}}}],["literal",{"_index":548,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["loaded",{"_index":803,"title":{},"body":{"index.html":{}}}],["loadfollowers",{"_index":281,"title":{},"body":{"injectables/GithubEffects.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadfollowerssuccess",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":271,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loadingfollowers",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingrepositories",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["loadinguser",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingusers",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["loadrepositories",{"_index":282,"title":{},"body":{"injectables/GithubEffects.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadrepositoriessuccess",{"_index":667,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loaduser",{"_index":283,"title":{},"body":{"injectables/GithubEffects.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadusers",{"_index":284,"title":{},"body":{"injectables/GithubEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadusersfailure",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loaduserssuccess",{"_index":669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadusersuccess",{"_index":670,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":529,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":530,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["lts",{"_index":768,"title":{},"body":{"index.html":{}}}],["m.usersmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["main",{"_index":830,"title":{},"body":{"index.html":{}}}],["management",{"_index":764,"title":{},"body":{"index.html":{}}}],["map",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["map(followers",{"_index":297,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(repositories",{"_index":302,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(response",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["map(u",{"_index":323,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(user",{"_index":307,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(users",{"_index":313,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["margin",{"_index":483,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["mat",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/RepositoryCardComponent.html":{}}}],["matautocompletemodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompleteselectedevent",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["matautocompletetrigger",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{}}}],["matbuttonmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["maticonmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":498,"title":{},"body":{"injectables/ToastService.html":{}}}],["matsnackbarmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":635,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["media",{"_index":634,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["message",{"_index":503,"title":{},"body":{"injectables/ToastService.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["min",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":857,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":756,"title":{},"body":{"index.html":{}}}],["models",{"_index":835,"title":{},"body":{"index.html":{}}}],["models/interfaces",{"_index":837,"title":{},"body":{"index.html":{}}}],["models/repository",{"_index":273,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{}}}],["models/user",{"_index":274,"title":{},"body":{"interfaces/FollowersState.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{}}}],["module",{"_index":122,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":124,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":739,"title":{},"body":{"index.html":{}}}],["new",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["next",{"_index":247,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":259,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":736,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["ngondestroy",{"_index":577,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["ngrx",{"_index":801,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":767,"title":{},"body":{"index.html":{}}}],["node_id",{"_index":531,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["nowrap",{"_index":643,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["npm",{"_index":727,"title":{},"body":{"index.html":{}}}],["null",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":353,"title":{},"body":{"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{}}}],["nuvolarexercise",{"_index":775,"title":{},"body":{"index.html":{}}}],["object",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["of(githubactions.loadusersfailure",{"_index":316,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype",{"_index":327,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loadfollowers",{"_index":292,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loadrepositories",{"_index":300,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loaduser",{"_index":305,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loadusers",{"_index":310,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.search",{"_index":318,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["on(loadfollowers",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadfollowerssuccess",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadrepositories",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadrepositoriessuccess",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loaduser",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadusers",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadusersfailure",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loaduserssuccess",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadusersuccess",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(search",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":572,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["onselect",{"_index":376,"title":{},"body":{"components/HomeComponent.html":{}}}],["onselect(event",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{}}}],["optimization",{"_index":757,"title":{},"body":{"index.html":{}}}],["optimized",{"_index":790,"title":{},"body":{"index.html":{}}}],["option.login",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{}}}],["optional",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["organizations_url",{"_index":532,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overflow",{"_index":629,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["overview",{"_index":722,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned_private_repos",{"_index":533,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":692,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":557,"title":{},"body":{"components/UserCardComponent.html":{},"index.html":{}}}],["pagechanged",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagechanged(event",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["pageevent",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagenumber",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["pages",{"_index":838,"title":{},"body":{"index.html":{}}}],["pagesize",{"_index":355,"title":{},"body":{"injectables/GithubService.html":{},"components/HomeComponent.html":{}}}],["paginatedresult",{"_index":448,"title":{"classes/PaginatedResult.html":{}},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["pagination",{"_index":372,"title":{"interfaces/Pagination.html":{}},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["paginator",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["panelclass",{"_index":508,"title":{},"body":{"injectables/ToastService.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["params.get('username",{"_index":602,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["path",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["people",{"_index":617,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["performance",{"_index":806,"title":{},"body":{"index.html":{}}}],["person_add",{"_index":619,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["picker",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["plan",{"_index":534,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":747,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":568,"title":{},"body":{"components/UserCardComponent.html":{}}}],["prerequisites",{"_index":766,"title":{},"body":{"index.html":{}}}],["private",{"_index":334,"title":{},"body":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["private_gists",{"_index":535,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["private_repos",{"_index":549,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["prod",{"_index":781,"title":{},"body":{"index.html":{}}}],["production",{"_index":780,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":623,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["profiles",{"_index":750,"title":{},"body":{"index.html":{}}}],["project",{"_index":730,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"properties.html":{}}}],["props",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":825,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":361,"title":{},"body":{"injectables/GithubService.html":{},"injectables/ToastService.html":{}}}],["providers",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public_gists",{"_index":536,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["public_repos",{"_index":537,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["quick",{"_index":721,"title":{},"body":{"index.html":{}}}],["radius",{"_index":563,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["reactiveformsmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["real",{"_index":784,"title":{},"body":{"index.html":{}}}],["received_events_url",{"_index":538,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":743,"title":{},"body":{"index.html":{}}}],["repo",{"_index":476,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repos_url",{"_index":539,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repositoriesreducer",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["repository.description",{"_index":466,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.forks_count",{"_index":472,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.full_name",{"_index":465,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.name",{"_index":464,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.stargazers_count",{"_index":470,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.watchers_count",{"_index":474,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repositorycardcomponent",{"_index":111,"title":{"components/RepositoryCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["repositorystate",{"_index":278,"title":{"interfaces/RepositoryState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["representing",{"_index":839,"title":{},"body":{"index.html":{}}}],["request",{"_index":250,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["require",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response.items",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["responsive",{"_index":754,"title":{},"body":{"index.html":{}}}],["result",{"_index":451,"title":{},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["results",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":258,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["returns",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["reusable",{"_index":832,"title":{},"body":{"index.html":{}}}],["right",{"_index":484,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["root",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{}}}],["root'},{'name",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["route",{"_index":578,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["routeparamsubscription",{"_index":576,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["router",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["routermodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["routermodule.forchild(routes",{"_index":651,"title":{},"body":{"modules/UsersModule.html":{}}}],["routermodule.forroot(routes",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routes",{"_index":151,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":236,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":728,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":330,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["search",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["search(event",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchcontrol",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{}}}],["searching",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["searchresult",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchterm",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchusers",{"_index":285,"title":{},"body":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{}}}],["searchusers(username",{"_index":356,"title":{},"body":{"injectables/GithubService.html":{}}}],["see",{"_index":724,"title":{},"body":{"index.html":{}}}],["select",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["selectfollowersloading",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgithubfollowers",{"_index":592,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgithubrepositories",{"_index":593,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgithubusers",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgitubuser",{"_index":594,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["selectrepositoriesloading",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserfeature",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserfollowers",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserloading",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserrepositories",{"_index":679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectusersfeature",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectusersloading",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ser",{"_index":787,"title":{},"body":{"index.html":{}}}],["serve",{"_index":737,"title":{},"body":{"index.html":{}}}],["server",{"_index":263,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["services",{"_index":833,"title":{},"body":{"index.html":{}}}],["services/github.service",{"_index":331,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["services/toast.service",{"_index":257,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["shared/repository",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/user",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["showuserdetails",{"_index":551,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["showuserdetails(user",{"_index":583,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["sidenav",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["site_admin",{"_index":540,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["slide",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["slideinanimation",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["smooth",{"_index":818,"title":{},"body":{"index.html":{}}}],["snackbar",{"_index":500,"title":{},"body":{"injectables/ToastService.html":{}}}],["solid",{"_index":565,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["space",{"_index":490,"title":{},"body":{"components/RepositoryCardComponent.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["spacer",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["span",{"_index":479,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["spec\\.ts",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":846,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["spinners",{"_index":808,"title":{},"body":{"index.html":{}}}],["src/.../animations.ts",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.actions.ts",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.reducer.ts",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.selector.ts",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app",{"_index":829,"title":{},"body":{"index.html":{}}}],["src/app/app",{"_index":235,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":239,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:13",{"_index":243,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:17",{"_index":249,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interfaces/github",{"_index":269,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["src/app/core/interfaces/pagination.ts",{"_index":450,"title":{},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["src/app/core/interfaces/pagination.ts:8",{"_index":454,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/app/core/interfaces/pagination.ts:9",{"_index":452,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/app/core/models/repository",{"_index":463,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["src/app/core/models/repository.ts",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["src/app/core/models/user",{"_index":554,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["src/app/core/models/user.ts",{"_index":511,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/github.service.ts",{"_index":335,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/app/core/services/github.service.ts:11",{"_index":343,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:15",{"_index":357,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:19",{"_index":354,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:23",{"_index":346,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:27",{"_index":351,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:31",{"_index":349,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/toast.service",{"_index":590,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/core/services/toast.service.ts",{"_index":495,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/core/services/toast.service.ts:11",{"_index":505,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:15",{"_index":502,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:7",{"_index":499,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/store/github.actions",{"_index":591,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/core/store/github.actions.ts",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/github.effects.ts",{"_index":280,"title":{},"body":{"injectables/GithubEffects.html":{},"coverage.html":{}}}],["src/app/core/store/github.effects.ts:10",{"_index":317,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:20",{"_index":299,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:30",{"_index":309,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:39",{"_index":304,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:48",{"_index":326,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:60",{"_index":289,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.reducer.ts",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/github.selector",{"_index":595,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/core/store/github.selector.ts",{"_index":676,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/home.component.ts",{"_index":367,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:23",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:24",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:25",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:26",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:27",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:28",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:39",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:60",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:64",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:70",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/layout/animations",{"_index":596,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/layout/animations.ts",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/repository",{"_index":455,"title":{},"body":{"components/RepositoryCardComponent.html":{},"coverage.html":{}}}],["src/app/shared/user",{"_index":550,"title":{},"body":{"components/UserCardComponent.html":{},"coverage.html":{}}}],["src/app/users/user",{"_index":570,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["src/app/users/users.module.ts",{"_index":648,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/assets",{"_index":840,"title":{},"body":{"index.html":{}}}],["src/environments",{"_index":845,"title":{},"body":{"index.html":{}}}],["src/environments/environment",{"_index":360,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/environments/environment.prod.ts",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["star",{"_index":469,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["starred_url",{"_index":541,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":777,"title":{},"body":{"index.html":{}}}],["started",{"_index":720,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":763,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["state.followers",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.github",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.loading",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.repositories",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ts",{"_index":270,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["state.user",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.users",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":841,"title":{},"body":{"index.html":{}}}],["stats",{"_index":477,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["store",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"dependencies.html":{}}}],["storemodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{}}}],["structure",{"_index":828,"title":{},"body":{"index.html":{}}}],["style",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["subscribe(username",{"_index":604,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["subscription",{"_index":587,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["subscriptions_url",{"_index":542,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":496,"title":{},"body":{"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["success(message",{"_index":504,"title":{},"body":{"injectables/ToastService.html":{}}}],["support",{"_index":848,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":794,"title":{},"body":{"index.html":{}}}],["svg",{"_index":849,"title":{},"body":{"modules.html":{}}}],["switching",{"_index":762,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":328,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["switchmap(action",{"_index":293,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["switchmap(params",{"_index":601,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["switchmap(value",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["t",{"_index":453,"title":{},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["tab",{"_index":628,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["table",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":329,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["tap(c",{"_index":295,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["testing",{"_index":822,"title":{},"body":{"index.html":{}}}],["tests",{"_index":824,"title":{},"body":{"index.html":{}}}],["text",{"_index":644,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["theme",{"_index":761,"title":{},"body":{"index.html":{}}}],["themes",{"_index":797,"title":{},"body":{"index.html":{}}}],["theming",{"_index":793,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":291,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.animatestate",{"_index":603,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.followers",{"_index":610,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.githubservice.getuserdetails(action.username).pipe",{"_index":306,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.getuserfollowers(action.username).pipe",{"_index":294,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.getuserrepos(action.username).pipe",{"_index":301,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.getusers(action.pagesize",{"_index":311,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.searchusers(action.username).pipe",{"_index":322,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.searchusers(value",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get(`${this.apiurl}/search/users?q=${username",{"_index":362,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users/${username",{"_index":364,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users/${username}/followers",{"_index":366,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users/${username}/repos",{"_index":365,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users?since=${since}&per_page=${pagesize",{"_index":363,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.isdarkside",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloading",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["this.pagesize",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.pagination",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.pagination!.currentpage",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.pagination.itemsperpage",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.pagination?.currentpage",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.repositories",{"_index":612,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.route.parammap.pipe",{"_index":600,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.routeparamsubscription",{"_index":599,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.routeparamsubscription.unsubscribe",{"_index":615,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.router.navigate(['user",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["this.router.routereusestrategy.shouldreuseroute",{"_index":597,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.searchcontrol.value",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.searchcontrol.valuechanges.pipe",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.searchresult",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snackbar.open(message",{"_index":506,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.store.dispatch(githubactions.loadusers",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.store.dispatch(githubactions.search",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.store.dispatch(loadfollowers",{"_index":606,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.dispatch(loadrepositories",{"_index":607,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.dispatch(loaduser",{"_index":605,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.pipe(select(selectfollowersloading",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrepositoriesloading",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectuserloading",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectusersloading",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(selectgithubfollowers",{"_index":611,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.select(selectgithubrepositories",{"_index":613,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.select(selectgithubusers",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.store.select(selectgitubuser",{"_index":609,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.toast.error('error",{"_index":265,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["this.togglecontrol.valuechanges.subscribe(isdark",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":608,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.user?.login",{"_index":555,"title":{},"body":{"components/UserCardComponent.html":{}}}],["this.users",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{}}}],["throwerror",{"_index":256,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":785,"title":{},"body":{"index.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":244,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["toastservice",{"_index":242,"title":{"injectables/ToastService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["toggle",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["togglecontrol",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":625,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["total_private_repos",{"_index":543,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["totalitems",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["transform",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':enter",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transitions",{"_index":817,"title":{},"body":{"index.html":{}}}],["translatex(0",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["trigger",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{}}}],["trigger('slideinanimation",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger.closepanel",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{}}}],["tslib",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["twitter_username",{"_index":544,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["two_factor_authentication",{"_index":545,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":836,"title":{},"body":{"index.html":{}}}],["u",{"_index":786,"title":{},"body":{"index.html":{}}}],["u.items",{"_index":324,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["undefined",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["unit",{"_index":821,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":546,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":547,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":115,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.blog",{"_index":622,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.followers",{"_index":618,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.following",{"_index":620,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.login",{"_index":614,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.name",{"_index":616,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user/:username",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["user?.login",{"_index":556,"title":{},"body":{"components/UserCardComponent.html":{}}}],["user?.type",{"_index":558,"title":{},"body":{"components/UserCardComponent.html":{}}}],["usercardcomponent",{"_index":114,"title":{"components/UserCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userdetailscomponent",{"_index":116,"title":{"components/UserDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":347,"title":{},"body":{"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["userreducer",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":276,"title":{},"body":{"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["users/user",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["usersmodule",{"_index":647,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{}}}],["usersstate",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userstate",{"_index":277,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":725,"title":{},"body":{"index.html":{}}}],["utilizes",{"_index":800,"title":{},"body":{"index.html":{}}}],["value",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["value.trim().length",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["var",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["variable",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":858,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":733,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":475,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["viewing",{"_index":792,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":473,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["void",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["web",{"_index":621,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["white",{"_index":642,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["width",{"_index":560,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["wrap",{"_index":492,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["x",{"_index":631,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["y",{"_index":630,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["zone.js",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkSide\n                            \n                            \n                                isLoading$\n                            \n                            \n                                title\n                            \n                            \n                                toggleControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkSide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Githubitat'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport {\n  selectFollowersLoading,\n  selectRepositoriesLoading,\n  selectUserLoading,\n  selectUsersLoading\n} from './core/store/github.selector';\nimport { slideInAnimation } from './layout/animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent implements OnInit{\n\n  isLoading$: Observable;\n  title = 'Githubitat';\n  toggleControl = new FormControl(false);\n  isDarkSide : boolean = false;\n\n  constructor(private store: Store) {\n    this.isLoading$ = combineLatest([\n      this.store.pipe(select(selectUsersLoading)),\n      this.store.pipe(select(selectUserLoading)),\n      this.store.pipe(select(selectRepositoriesLoading)),\n      this.store.pipe(select(selectFollowersLoading)),\n    ]).pipe(\n      map(([\n        loadingUsers,\n        loadingUser,\n        loadingRepositories,\n        loadingFollowers]) => loadingUsers || loadingUser || loadingRepositories || loadingFollowers)\n    );\n  }\n  ngOnInit(): void {\n    this.toggleControl.valueChanges.subscribe(isDark => {\n      this.isDarkSide = isDark;\n   });\n  }\n}\n\n    \n\n    \n        \n\tGithubitat\n\t\n\tbrightness_5\n\t\n\t\n\tbedtime\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .spacer {\n  flex: 1 1 auto;\n}\n\nmat-sidenav-container {\n  min-height: 100vh;\n}\n\nmat-sidenav-content {\n  min-height: 100vh;\n}\n\n.slide-animation {\n  min-height: 100vh;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tGithubitat\t\tbrightness_5\t\t\tbedtime\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nRepositoryCardComponent\n\nRepositoryCardComponent\n\nAppModule -->\n\nRepositoryCardComponent->AppModule\n\n\n\n\n\nUserCardComponent\n\nUserCardComponent\n\nAppModule -->\n\nUserCardComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            RepositoryCardComponent\n                        \n                        \n                            UserCardComponent\n                        \n                        \n                            UserDetailsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';import { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatIconModule} from '@angular/material/icon';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSidenavModule} from '@angular/material/sidenav'\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { followersReducer, githubReducer, repositoriesReducer, userReducer } from './core/store/github.reducer';\nimport { GithubEffects } from './core/store/github.effects';\nimport { UserCardComponent } from './shared/user-card/user-card.component';\nimport { UserDetailsComponent } from './users/user-details/user-details.component';\nimport { RepositoryCardComponent } from './shared/repository-card/repository-card.component';\n\nconst routes: Routes = [\n  { path:'', component: HomeComponent},\n  {\n    path: 'user/:username',\n    loadChildren: () => \"import('./users/users.module').then(m => m.UsersModule)\"\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UserCardComponent,\n    UserDetailsComponent,\n    RepositoryCardComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    StoreModule.forRoot({\n      github: githubReducer,\n      user: userReducer,\n      followers: followersReducer,\n      repositories: repositoriesReducer,\n    }),\n    EffectsModule.forRoot([GithubEffects]),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n\n    MatSliderModule,\n    MatCardModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatButtonModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { UserDetailsComponent } from './users/user-details/user-details.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: HomeComponent\n  },\n  {\n    path: 'user/:username',\n    component: UserDetailsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toast: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/interceptors/error.interceptor.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { ToastService } from '../services/toast.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private toast: ToastService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.error('Error communicating with a server', error);\n        this.toast.error('Error communicating with a server');\n        return throwError(() => error)\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FollowersState.html":{"url":"interfaces/FollowersState.html","title":"interface - FollowersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FollowersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubEffects.html":{"url":"injectables/GithubEffects.html","title":"injectable - GithubEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/github.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFollowers$\n                            \n                            \n                                loadRepositories$\n                            \n                            \n                                loadUser$\n                            \n                            \n                                loadUsers$\n                            \n                            \n                                searchUsers$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, githubService: GithubService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/github.effects.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFollowers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadFollowers),\n    switchMap(action =>\n      this.githubService.getUserFollowers(action.username).pipe(\n        tap(c => console.log(c)),\n        map(followers => GithubActions.loadFollowersSuccess({ followers }))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadRepositories),\n    switchMap(action =>\n      this.githubService.getUserRepos(action.username).pipe(\n        map(repositories => GithubActions.loadRepositoriesSuccess({ repositories }))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUser),\n    switchMap(action =>\n      this.githubService.getUserDetails(action.username).pipe(\n        map(user => GithubActions.loadUserSuccess({ user }))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUsers),\n    switchMap(action =>\n      this.githubService.getUsers(action.pageSize, action.since).pipe(\n        map(users => GithubActions.loadUsersSuccess({ users })),\n        catchError(error => of(GithubActions.loadUsersFailure({ error })))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.search),\n    switchMap(action => {\n      if (action.username && action.username.trim().length > 0) {\n        return this.githubService.searchUsers(action.username).pipe(\n          map(u => GithubActions.loadUsersSuccess({ users: u.items })),\n        )\n      }\n      else {\n        return EMPTY;\n      }\n    })\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:48\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY, of } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\nimport { GithubService } from '../services/github.service';\nimport * as GithubActions from './github.actions';\n\n@Injectable()\nexport class GithubEffects {\n  loadUsers$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUsers),\n    switchMap(action =>\n      this.githubService.getUsers(action.pageSize, action.since).pipe(\n        map(users => GithubActions.loadUsersSuccess({ users })),\n        catchError(error => of(GithubActions.loadUsersFailure({ error })))\n      )\n    )\n  ));\n\n  loadFollowers$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadFollowers),\n    switchMap(action =>\n      this.githubService.getUserFollowers(action.username).pipe(\n        tap(c => console.log(c)),\n        map(followers => GithubActions.loadFollowersSuccess({ followers }))\n      )\n    )\n  ));\n\n  loadUser$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUser),\n    switchMap(action =>\n      this.githubService.getUserDetails(action.username).pipe(\n        map(user => GithubActions.loadUserSuccess({ user }))\n      )\n    )\n  ));\n\n  loadRepositories$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadRepositories),\n    switchMap(action =>\n      this.githubService.getUserRepos(action.username).pipe(\n        map(repositories => GithubActions.loadRepositoriesSuccess({ repositories }))\n      )\n    )\n  ));\n\n  searchUsers$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.search),\n    switchMap(action => {\n      if (action.username && action.username.trim().length > 0) {\n        return this.githubService.searchUsers(action.username).pipe(\n          map(u => GithubActions.loadUsersSuccess({ users: u.items })),\n        )\n      }\n      else {\n        return EMPTY;\n      }\n    })\n  ));\n\n\n  constructor(\n    private actions$: Actions,\n    private githubService: GithubService\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDetails\n                            \n                            \n                                getUserFollowers\n                            \n                            \n                                getUserRepos\n                            \n                            \n                                getUsers\n                            \n                            \n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/github.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDetails\n                        \n                    \n                \n            \n            \n                \ngetUserDetails(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFollowers\n                        \n                    \n                \n            \n            \n                \ngetUserFollowers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRepos\n                        \n                    \n                \n            \n            \n                \ngetUserRepos(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(pageSize: number, since: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                since\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/github.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {\n  private apiUrl = environment.baseUrl;\n\n  constructor(private http: HttpClient) { }\n\n  searchUsers(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/search/users?q=${username}`);\n  }\n\n  getUsers(pageSize: number, since: number): Observable {\n    return this.http.get(`${this.apiUrl}/users?since=${since}&per_page=${pageSize}`);\n  }\n\n  getUserDetails(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/users/${username}`);\n  }\n\n  getUserRepos(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/users/${username}/repos`);\n  }\n\n  getUserFollowers(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/users/${username}/followers`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubState.html":{"url":"interfaces/GithubState.html","title":"interface - GithubState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                pageSize\n                            \n                            \n                                pagination\n                            \n                            \n                                searchControl\n                            \n                            \n                                searchResult$\n                            \n                            \n                                searchTerm\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                pageChanged\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, githubService: GithubService, toast: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatAutocompleteSelectedEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageChanged\n                        \n                    \n                \n            \n            \n                \npageChanged(event: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(event: Event, trigger: MatAutocompleteTrigger)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trigger\n                                            \n                                                        MatAutocompleteTrigger\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchResult$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, catchError, debounceTime, distinctUntilChanged, filter, map, of, switchMap } from 'rxjs';\nimport { Pagination } from '../core/interfaces/pagination';\nimport { User } from '../core/models/user';\nimport { GithubService } from '../core/services/github.service';\nimport { ToastService } from '../core/services/toast.service';\nimport * as GithubActions from '../core/store/github.actions';\nimport { selectGithubUsers } from '../core/store/github.selector';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  pagination: Pagination | undefined;\n  pageNumber = 1;\n  pageSize = 12;\n  searchControl = new FormControl();\n  searchTerm: string = '';\n  searchResult$: Observable | undefined;\n\n  users$: Observable = new Observable;\n\n  constructor(\n    private router: Router,\n    private store: Store,\n    private githubService: GithubService,\n    private toast: ToastService\n  ) { }\n\n  ngOnInit(): void {\n    this.pagination = {\n      totalItems: 300,\n      currentPage: 1,\n      itemsPerPage: 12,\n    }\n    this.searchResult$ = this.searchControl.valueChanges.pipe(\n      debounceTime(600),\n      distinctUntilChanged(),\n      filter(value => value && value.trim().length > 1),\n      switchMap(value => this.githubService.searchUsers(value)),\n      map(response => response.items),\n      catchError(error => {\n        this.toast.error('Error searching users, try again later');\n        return of([]);\n      })\n    );\n    this.store.dispatch(GithubActions.loadUsers({ pageSize: this.pagination.itemsPerPage, since: 0 }));\n    this.users$ = this.store.select(selectGithubUsers);\n  }\n\n  onSelect(event: MatAutocompleteSelectedEvent) {\n    this.router.navigate(['user/', event.option.value]);\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.pagination!.currentPage = event.pageSize * event.pageIndex;\n    this.store.dispatch(GithubActions.loadUsers({ pageSize: this.pageSize, since: this.pagination?.currentPage! }))\n  }\n\n  search(event: Event, trigger: MatAutocompleteTrigger) {\n    trigger.closePanel();\n    this.store.dispatch(GithubActions.search({ username: this.searchControl.value }))\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Search\n                \n                search\n                \n                    \n                        {{option.login}}\n                    \n                \n            \n        \n    \n\n    \n        \n            \n        \n    \n\n\n    \n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .paginator {\n  left: 50%;\n}\n\n.container {\n  height: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Search                                search                                                            {{option.login}}                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResult.html":{"url":"classes/PaginatedResult.html","title":"class - PaginatedResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                pagination\n                            \n                            \n                                    Optional\n                                result\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/interfaces/pagination.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/interfaces/pagination.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult {\n    result?: T;\n    pagination?: Pagination;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/pagination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                        \n                                            itemsPerPage\n                                        \n                                \n                                \n                                        \n                                            totalItems\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult {\n    result?: T;\n    pagination?: Pagination;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepositoryCardComponent.html":{"url":"components/RepositoryCardComponent.html","title":"component - RepositoryCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RepositoryCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/repository-card/repository-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repository-card\n            \n\n\n\n            \n                styleUrls\n                ./repository-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repository-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                repository\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        repository\n                    \n                \n                \n                    \n                        Type :         GitHubRepository | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/repository-card/repository-card.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { GitHubRepository } from 'src/app/core/models/repository';\n\n@Component({\n  selector: 'app-repository-card',\n  templateUrl: './repository-card.component.html',\n  styleUrls: ['./repository-card.component.scss']\n})\nexport class RepositoryCardComponent {\n\n  @Input() repository: GitHubRepository | undefined;\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ repository.name }}\n            \n            \n                {{ repository.full_name }}\n            \n            \n            \n                {{ repository.description || 'No description available' }}\n            \n            \n            \n                \n                    star {{ repository.stargazers_count }}\n                    call_split {{ repository.forks_count }}\n                    visibility {{ repository.watchers_count }}\n                \n                View on GitHub\n            \n        \n    \n\n    \n\n    \n                \n                    ./repository-card.component.scss\n                \n                .repo-stats {\n  display: flex;\n\n  span {\n    display: flex;\n    align-items: center;\n    margin-right: 24px;\n  }\n\n  mat-icon {\n    margin-right: 4px;\n  }\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ repository.name }}                                        {{ repository.full_name }}                                                    {{ repository.description || \\'No description available\\' }}                                                                        star {{ repository.stargazers_count }}                    call_split {{ repository.forks_count }}                    visibility {{ repository.watchers_count }}                                View on GitHub                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepositoryCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryState.html":{"url":"interfaces/RepositoryState.html","title":"interface - RepositoryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RepositoryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            repositories\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repositories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repositories:         GitHubRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitHubRepository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/toast.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toast.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toast.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private snackbar: MatSnackBar) { }\n\n  success(message: string) {\n    this.snackbar.open(message, \"Close\", { panelClass: ['snackbar-success'], duration: 2000 })\n  }\n\n  error(message: string) {\n    this.snackbar.open(message, \"Close\", { panelClass: ['snackbar-error'], duration: 2000 })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar_url\n                                        \n                                \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            blog\n                                        \n                                \n                                \n                                        \n                                            collaborators\n                                        \n                                \n                                \n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            disk_usage\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            events_url\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            followers_url\n                                        \n                                \n                                \n                                        \n                                            following\n                                        \n                                \n                                \n                                        \n                                            following_url\n                                        \n                                \n                                \n                                        \n                                            gists_url\n                                        \n                                \n                                \n                                        \n                                            gravatar_id\n                                        \n                                \n                                \n                                        \n                                            hireable\n                                        \n                                \n                                \n                                        \n                                            html_url\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            node_id\n                                        \n                                \n                                \n                                        \n                                            organizations_url\n                                        \n                                \n                                \n                                        \n                                            owned_private_repos\n                                        \n                                \n                                \n                                        \n                                            plan\n                                        \n                                \n                                \n                                        \n                                            private_gists\n                                        \n                                \n                                \n                                        \n                                            public_gists\n                                        \n                                \n                                \n                                        \n                                            public_repos\n                                        \n                                \n                                \n                                        \n                                            received_events_url\n                                        \n                                \n                                \n                                        \n                                            repos_url\n                                        \n                                \n                                \n                                        \n                                            site_admin\n                                        \n                                \n                                \n                                        \n                                            starred_url\n                                        \n                                \n                                \n                                        \n                                            subscriptions_url\n                                        \n                                \n                                \n                                        \n                                            total_private_repos\n                                        \n                                \n                                \n                                        \n                                            twitter_username\n                                        \n                                \n                                \n                                        \n                                            two_factor_authentication\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collaborators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collaborators:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disk_usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disk_usage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gists_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gists_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gravatar_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gravatar_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hireable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hireable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizations_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizations_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owned_private_repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owned_private_repos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plan:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private_gists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private_gists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_gists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_gists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_repos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        received_events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        received_events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        site_admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starred_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        starred_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscriptions_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscriptions_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_private_repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_private_repos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        twitter_username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        twitter_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        two_factor_authentication\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        two_factor_authentication:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n  name: string;\n  company: string;\n  blog: string;\n  location: string;\n  email: string;\n  hireable: boolean;\n  bio: string;\n  twitter_username: string;\n  public_repos: number;\n  public_gists: number;\n  followers: number;\n  following: number;\n  created_at: string;\n  updated_at: string;\n  private_gists: number;\n  total_private_repos: number;\n  owned_private_repos: number;\n  disk_usage: number;\n  collaborators: number;\n  two_factor_authentication: boolean;\n  plan: {\n    name: string;\n    space: number;\n    private_repos: number;\n    collaborators: number;\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCardComponent.html":{"url":"components/UserCardComponent.html","title":"component - UserCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/user-card/user-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-card\n            \n\n\n\n            \n                styleUrls\n                ./user-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showUserDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/user-card/user-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/user-card/user-card.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showUserDetails\n                        \n                    \n                \n            \n            \n                \nshowUserDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/user-card/user-card.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/core/models/user';\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss']\n})\nexport class UserCardComponent {\n\n  @Input() user: User | undefined;\n\n  constructor(private router: Router) { }\n\n  showUserDetails() {\n    this.router.navigate(['user/', this.user?.login]);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            {{user?.login}}\n            \n                Github page\n            \n        \n    \n    {{user?.type}}\n\n    \n\n    \n                \n                    ./user-card.component.scss\n                \n                .user-avatar {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    border: 2px solid #ddd;\n}\n\n.card {\n    cursor: pointer;\n}\n\n.user-card {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n\n.github-page {\n    width: 130px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{user?.login}}                            Github page                            {{user?.type}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailsComponent.html":{"url":"components/UserDetailsComponent.html","title":"component - UserDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-details/user-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-details\n            \n\n\n\n            \n                styleUrls\n                ./user-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animateState\n                            \n                            \n                                followers$\n                            \n                            \n                                repositories$\n                            \n                            \n                                    Private\n                                routeParamSubscription\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showUserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, route: ActivatedRoute, toast: ToastService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-details/user-details.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-details/user-details.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-details/user-details.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserDetails\n                        \n                    \n                \n            \n            \n                \nshowUserDetails(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-details/user-details.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animateState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routeParamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription, switchMap } from 'rxjs';\nimport { GitHubRepository } from 'src/app/core/models/repository';\nimport { User } from 'src/app/core/models/user';\nimport { ToastService } from 'src/app/core/services/toast.service';\nimport { loadFollowers, loadRepositories, loadUser } from 'src/app/core/store/github.actions';\nimport { selectGithubFollowers, selectGithubRepositories, selectGitubUser } from 'src/app/core/store/github.selector';\nimport { slideInAnimation } from 'src/app/layout/animations';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class UserDetailsComponent implements OnInit, OnDestroy {\n  user$ = new Observable();\n  followers$ = new Observable();\n  repositories$ = new Observable();\n  private routeParamSubscription: Subscription | undefined;\n  animateState: string = '';\n\n  constructor(\n    private store: Store,\n    private route: ActivatedRoute,\n    private toast: ToastService,\n    private router: Router,\n  ) {\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  ngOnInit(): void {\n    this.routeParamSubscription = this.route.paramMap.pipe(\n      switchMap(params => {\n        const username = params.get('username');\n        this.animateState = username!;\n        return username ? [username] : [];\n      })\n    ).subscribe(username => {\n      if (username) {\n        this.store.dispatch(loadUser({ username }));\n        this.store.dispatch(loadFollowers({ username }));\n        this.store.dispatch(loadRepositories({ username }));\n      } else {\n        this.toast.error('Error loading user');\n      }\n    });\n\n    this.user$ = this.store.select(selectGitubUser);\n    this.followers$ = this.store.select(selectGithubFollowers);\n    this.repositories$ = this.store.select(selectGithubRepositories)\n  }\n\n  showUserDetails(user: User) {\n    this.router.navigate(['user/', user.login]);\n  }\n\n  ngOnDestroy(): void {\n    if (this.routeParamSubscription) {\n      this.routeParamSubscription.unsubscribe();\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        {{user.name}}\n                    \n                    \n                        {{user.login}}\n                    \n                    \n                        \n                    \n                    \n                        \n                            \n                                people\n                                {{user.followers | number}} followers\n                            \n                            \n                                person_add\n                                {{user.following | number}} following\n                            \n                        \n                        \n                            web\n                            {{user.blog}}\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                                \n                                    \n                                \n                            \n                        \n                        \n                            \n                                \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./user-details.component.scss\n                \n                .profile-image {\n    margin-top: 20px;\n    height: 300px;\n    width: 300px;\n    border-radius: 50%;\n    border: 2px solid #ddd;\n}\n\n.tab-content {\n    height: 100vh;\n    overflow-y: auto;\n    overflow-x: hidden;\n}\n\n\n.following {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.user-details-icon {\n    margin-right: 5px;\n}\n\n@media (max-width: 576px) {\n    .following {\n        flex-direction: column;\n    }\n\n    .following>div {\n        margin-bottom: 10px;\n    }\n\n    a {\n        display: block;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-width: 100%;\n    }\n\n    .profile-image {\n        height: 200px;\n        width: 200px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    {{user.name}}                                                                {{user.login}}                                                                                                                                                                                            people                                {{user.followers | number}} followers                                                                                        person_add                                {{user.following | number}} following                                                                                                        web                            {{user.blog}}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: UserDetailsComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            FollowersState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            GithubState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            RepositoryState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/pagination.ts\n            \n            class\n            PaginatedResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/pagination.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/repository.ts\n            \n            interface\n            GitHubRepository\n            \n                0 %\n                (0/80)\n            \n        \n        \n            \n                \n                src/app/core/models/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                src/app/core/services/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadFollowers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadFollowersSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadRepositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadRepositoriesSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUsers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUsersFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUsersSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            search\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.effects.ts\n            \n            injectable\n            GithubEffects\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            followersReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            githubReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialFollowersState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialRepositoryState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialUserState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            repositoriesReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectFollowersLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGithubFollowers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGithubRepositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGithubUsers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGitubUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectRepositoriesLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserFollowers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserRepositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUsersFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUsersLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/layout/animations.ts\n            \n            variable\n            slideInAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/repository-card/repository-card.component.ts\n            \n            component\n            RepositoryCardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/user-card/user-card.component.ts\n            \n            component\n            UserCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/users/user-details/user-details.component.ts\n            \n            component\n            UserDetailsComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/color-picker : ^7.0.1\n        \n            @angular/animations : ~13.3.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @ngrx/effects : ^13.2.0\n        \n            @ngrx/entity : ^13.2.0\n        \n            @ngrx/router-store : ^13.2.0\n        \n            @ngrx/store : ^13.2.0\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            bootstrap : ^5.1.3\n        \n            eslint : ^8.56.0\n        \n            ngx-bootstrap : ^8.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.6.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGithubitat\nThis is just a quick overview, detailed app documentation can be see using a comand \nnpm run compodoc:serve\nThis project was generated with Angular CLI version 13.3.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nApplication Overview\nThis application is a user-friendly platform that allows searching GitHub users by their username. It displays user profiles, including details and lists of repositories and followers. The application emphasizes responsive design, mobile optimization, and incorporates advanced features like dynamic theme switching, state management, and lazy loading.\nGetting Started\nPrerequisites\n\nNode.js (LTS version)\nAngular CLI\nGit (for version control)\n\nInstallation\nClone the repository:\ngit clone githubitat\nNavigate to the project directory:\ncd NuvolarExercise\nInstall dependencies:\nnpm install\nStart the development server:\nng serve\nThe application will be available at http://localhost:4200/.\nBuilding the Application\nDevelopment Build:\nng build\nProduction Build:\nng build --prod\nApplication Features\nUser Search Functionality:\nSearch bar on the homepage.\nReal-time search results as you type.\nU\nser Details Page:\nDisplays user details, repositories, and followers.\nAccessible by clicking on a user in the search results.\nResponsive Design:\nOptimized for mobile and desktop viewing.\nTheming:\nSupports light and dark themes.\nTheme toggle implemented in the header.\nState Management:\nUtilizes NgRx for consistent state across the app.\nLazy Loading:\nModules are loaded dynamically to improve performance.\nLoading Indicators:\nSpinners indicate data loading.\nError Handling:\nInterceptors catch and handle API errors.\nAnimated Transitions:\nSmooth page transitions enhance the user experience.\nUnit Testing:\nBasic unit tests provided for key components.\nCode Structure\nsrc/app: Main application folder.\ncomponents: Reusable components.\nservices: Angular services for API calls and state management.\nmodels: TypeScript models/interfaces.\npages: Components representing pages.\ninterceptors: HTTP interceptors.\nsrc/assets: Static assets like images and global styles.\nsrc/environments: Environment-specific configuration files.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nRepositoryCardComponent\n\nRepositoryCardComponent\n\nAppModule -->\n\nRepositoryCardComponent->AppModule\n\n\n\n\n\nUserCardComponent\n\nUserCardComponent\n\nAppModule -->\n\nUserCardComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            followersReducer   (src/.../github.reducer.ts)\n                        \n                        \n                            githubReducer   (src/.../github.reducer.ts)\n                        \n                        \n                            initialFollowersState   (src/.../github.reducer.ts)\n                        \n                        \n                            initialRepositoryState   (src/.../github.reducer.ts)\n                        \n                        \n                            initialState   (src/.../github.reducer.ts)\n                        \n                        \n                            initialUserState   (src/.../github.reducer.ts)\n                        \n                        \n                            loadFollowers   (src/.../github.actions.ts)\n                        \n                        \n                            loadFollowersSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            loadRepositories   (src/.../github.actions.ts)\n                        \n                        \n                            loadRepositoriesSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            loadUser   (src/.../github.actions.ts)\n                        \n                        \n                            loadUsers   (src/.../github.actions.ts)\n                        \n                        \n                            loadUsersFailure   (src/.../github.actions.ts)\n                        \n                        \n                            loadUsersSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            loadUserSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            repositoriesReducer   (src/.../github.reducer.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            search   (src/.../github.actions.ts)\n                        \n                        \n                            selectFollowersLoading   (src/.../github.selector.ts)\n                        \n                        \n                            selectGithubFollowers   (src/.../github.selector.ts)\n                        \n                        \n                            selectGithubRepositories   (src/.../github.selector.ts)\n                        \n                        \n                            selectGithubUsers   (src/.../github.selector.ts)\n                        \n                        \n                            selectGitubUser   (src/.../github.selector.ts)\n                        \n                        \n                            selectRepositoriesLoading   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserFeature   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserFollowers   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserLoading   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserRepositories   (src/.../github.selector.ts)\n                        \n                        \n                            selectUsersFeature   (src/.../github.selector.ts)\n                        \n                        \n                            selectUsersLoading   (src/.../github.selector.ts)\n                        \n                        \n                            slideInAnimation   (src/.../animations.ts)\n                        \n                        \n                            userReducer   (src/.../github.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  token: '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',\n  baseUrl:'https://api.github.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  baseUrl:'https://api.github.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/github.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        followersReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialFollowersState,\n  on(loadFollowers, state => ({ ...state, loading: true })),\n  on(loadFollowersSuccess, (state, { followers }) => ({ ...state, loading: false, followers: followers })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        githubReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(loadUsers, state => ({ ...state, loading: true })),\n  on(search, state => ({ ...state, loading: true })),\n  on(loadUsersSuccess, (state, { users }) => ({ ...state, loading: false, users: users })),\n  on(loadUsersFailure, (state, { error }) => ({ ...state, loading: false, error })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialFollowersState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FollowersState\n\n                    \n                \n                \n                    \n                        Default value : {\n  followers: [],\n  loading: false,\n  error: null\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialRepositoryState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepositoryState\n\n                    \n                \n                \n                    \n                        Default value : {\n  repositories: [],\n  loading: false,\n  error: null\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersState\n\n                    \n                \n                \n                    \n                        Default value : {\n  users: [],\n  loading: false,\n  error: null\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialUserState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: {\n    login: '',\n    id: 0,\n    node_id: '',\n    avatar_url: '',\n    gravatar_id: '',\n    url: '',\n    html_url: '',\n    followers_url: '',\n    following_url: '',\n    gists_url: '',\n    starred_url: '',\n    subscriptions_url: '',\n    organizations_url: '',\n    repos_url: '',\n    events_url: '',\n    received_events_url: '',\n    type: '',\n    site_admin: false,\n    name: '',\n    company: '',\n    blog: '',\n    location: '',\n    email: '',\n    hireable: false,\n    bio: '',\n    twitter_username: '',\n    public_repos: 0,\n    public_gists: 0,\n    followers: 0,\n    following: 0,\n    created_at: '',\n    updated_at: '',\n    private_gists: 0,\n    total_private_repos: 0,\n    owned_private_repos: 0,\n    disk_usage: 0,\n    collaborators: 0,\n    two_factor_authentication: false,\n    plan: {\n      name: '',\n      space: 0,\n      private_repos: 0,\n      collaborators: 0\n    }\n  },\n  loading: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositoriesReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialRepositoryState,\n  on(loadRepositories, state => ({ ...state, loading: true })),\n  on(loadRepositoriesSuccess, (state, { repositories }) => ({ ...state, loading: false, repositories: repositories })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialUserState,\n  on(loadUser, state => ({ ...state, loading: true })),\n  on(loadUserSuccess, (state, { user }) => ({ ...state, loading: false, user: user })),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/github.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadFollowers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Followers',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadFollowersSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Followers Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Repositories',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositoriesSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Repositories Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load User',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsersFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users Failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsersSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/github.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectFollowersLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFollowers,\n  (state: FollowersState) => state.loading\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGithubFollowers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFollowers,\n  (state: FollowersState) => state.followers,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGithubRepositories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserRepositories,\n  (state: RepositoryState) => state.repositories,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGithubUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUsersFeature,\n  (state: GithubState) => state.users,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGitubUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFeature,\n  (state: UserState) => state.user,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRepositoriesLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserRepositories,\n  (state: RepositoryState) => state.loading\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.user\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserFollowers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.followers\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFeature,\n  (state: UserState) => state.loading\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserRepositories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.repositories\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUsersFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.github\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUsersLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUsersFeature,\n  (state: GithubState) => state.loading\n)\n                    \n                \n\n\n        \n    \n\n    src/app/layout/animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slideInAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('slideInAnimation', [\n  transition(':enter', [\n    style({ transform: 'translateX(100%)' }),\n    animate('0.5s ease-in', style({ transform: 'translateX(0)' }))\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
