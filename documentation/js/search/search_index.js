var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.786,1,1.147]],["body/components/AppComponent.html",[0,1.075,1,1.725,2,1.612,3,0.283,4,0.245,5,1.359,6,1.359,7,1.359,8,1.359,9,0.245,10,2.003,11,1.981,12,2.974,13,4.166,14,1.359,15,2.945,16,2.396,17,2.22,18,1.981,19,4.166,20,1.981,21,3.529,22,0.324,23,0.826,24,4.166,25,4.166,26,4.166,27,4.166,28,1.462,29,4.579,30,3.269,31,0.912,32,2.003,33,3.197,34,4.166,35,4.579,36,1.639,37,3.529,38,0.912,39,0.037,40,1.184,41,0.536,42,0.83,43,2.42,44,1.462,45,2.338,46,2.42,47,1.782,48,2.103,49,2.103,50,2.52,51,2.103,52,2.42,53,1.222,54,3.789,55,2.42,56,2.22,57,3.529,58,2.42,59,0.867,60,0.566,61,2.22,62,2.42,63,3.529,64,2.52,65,1.003,66,2.42,67,1.359,68,1.728,69,1.728,70,1.728,71,1.728,72,2.003,73,2.003,74,1.522,75,2.003,76,0.283,77,0.367,78,1.359,79,1.359,80,2.42,81,2.42,82,2.42,83,2.42,84,2.42,85,2.42,86,3.529,87,3.529,88,3.529,89,3.529,90,2.42,91,2.42,92,2.42,93,2.42,94,3.529,95,3.529,96,2.42,97,1.522,98,2.52,99,2.003,100,2.921,101,3.529,102,2.003,103,4.166,104,2.621,105,3.447,106,1.522,107,2.42,108,2.42,109,1.105,110,1.981,111,1.981,112,1.359,113,2.57,114,1.359,115,1.359,116,0.83,117,1.359,118,0.912,119,1.222,120,1.981,121,0.912,122,0.536,123,0.756,124,1.222,125,1.359,126,1.359,127,0.021,128,0.021]],["title/modules/AppModule.html",[129,1.709,130,1.915]],["body/modules/AppModule.html",[1,2.112,3,0.259,4,0.223,9,0.223,16,1.009,39,0.037,59,1.054,60,0.517,67,1.24,74,1.39,76,0.259,77,0.335,109,1.009,116,1.687,118,1.853,121,1.853,122,0.335,123,1.536,127,0.019,128,0.019,129,1.24,130,3.751,131,1.009,132,1.24,133,2.82,134,2.82,135,3.268,136,1.577,137,1.828,138,1.828,139,1.828,140,1.828,141,1.828,142,2.761,143,2.761,144,2.761,145,2.73,146,1.828,147,1.828,148,2.209,149,2.356,150,2.356,151,3.3,152,2.73,153,1.577,154,2.209,155,2.209,156,3.3,157,2.209,158,1.577,159,1.115,160,1.009,161,1.828,162,3.3,163,2.209,164,3.3,165,2.209,166,3.3,167,2.209,168,3.3,169,2.209,170,3.3,171,2.209,172,3.3,173,2.209,174,3.3,175,2.209,176,3.3,177,2.209,178,3.3,179,1.828,180,1.577,181,3.3,182,2.209,183,3.3,184,1.828,185,3.3,186,2.209,187,3.3,188,1.828,189,3.3,190,2.209,191,3.3,192,2.209,193,3.3,194,2.209,195,2.209,196,3.3,197,2.209,198,3.3,199,2.209,200,1.828,201,3.3,202,2.209,203,3.3,204,3.3,205,3.949,206,3.3,207,1.24,208,2.209,209,2.209,210,2.209,211,1.577,212,2.356,213,2.356,214,2.356,215,2.356,216,2.209,217,1.39,218,2.209,219,2.209,220,1.577,221,3.3,222,1.828,223,1.24,224,1.577,225,2.209,226,1.577,227,2.209,228,2.209,229,1.24,230,0.758,231,0.832,232,2.209,233,3.3,234,3.3,235,3.3,236,2.356]],["title/modules/AppRoutingModule.html",[129,1.709,142,1.709]],["body/modules/AppRoutingModule.html",[0,1.272,3,0.464,4,0.4,9,0.4,39,0.037,59,0.957,60,0.927,76,0.464,77,0.601,116,1.84,123,1.237,127,0.029,128,0.029,131,1.809,136,2.829,142,2.766,149,2.829,150,3.518,158,3.518,159,2.708,160,1.809,161,3.279,222,3.279,223,2.224,224,2.829,237,3.962,238,3.962,239,2.492,240,4.438,241,2.224,242,3.962,243,3.962,244,3.962,245,3.962,246,3.962]],["title/interceptors/ErrorInterceptor.html",[143,1.709,247,2.174]],["body/interceptors/ErrorInterceptor.html",[3,0.421,4,0.363,9,0.363,11,2.016,22,0.481,28,1.918,31,1.353,36,1.446,38,1.745,39,0.037,40,1.316,41,0.542,42,1.588,44,1.488,51,2.587,59,0.923,60,0.84,65,1.488,76,0.421,77,0.545,78,2.016,127,0.027,128,0.027,143,2.599,207,2.016,248,2.564,249,2.971,250,3.832,251,3.591,252,2.733,253,3.591,254,3.306,255,3.832,256,4.48,257,4.241,258,4.48,259,3.591,260,2.971,261,4.63,262,2.971,263,3.832,264,1.745,265,2.564,266,4.63,267,3.591,268,2.338,269,3.591,270,3.591,271,3.591,272,4.63,273,3.832,274,1.745,275,2.564]],["title/interfaces/FollowersState.html",[276,0.713,277,1.39]],["body/interfaces/FollowersState.html",[3,0.453,4,0.39,9,0.39,22,0.518,23,1.135,39,0.037,41,0.621,47,2.953,59,0.827,76,0.651,122,0.901,127,0.028,128,0.028,230,1.908,231,1.456,274,2.203,276,1.302,277,2.215,278,1.765,279,2.169,280,2.169,281,2.71,282,2.215,283,2.431,284,2.169,285,1.765,286,1.601,287,1.765,288,1.765]],["title/injectables/GithubEffects.html",[217,1.915,264,1.147]],["body/injectables/GithubEffects.html",[3,0.277,4,0.239,9,0.239,22,0.317,23,0.813,31,1.309,36,1.575,38,0.892,39,0.038,40,0.673,41,0.277,42,0.812,48,2.436,49,2.436,59,0.86,60,0.554,64,1.69,65,0.981,76,0.277,77,0.359,79,1.95,122,0.527,127,0.02,128,0.02,211,1.69,217,2.185,230,1.191,231,1.309,264,1.309,265,1.69,268,2.288,274,1.309,286,1.878,289,1.489,290,1.959,291,2.588,292,2.588,293,2.588,294,2.937,295,3.404,296,2.368,297,5.043,298,2.925,299,2.368,300,5.621,301,5.545,302,3.473,303,5.545,304,3.473,305,3.473,306,3.473,307,2.368,308,3.473,309,3.473,310,3.473,311,3.473,312,2.368,313,3.473,314,3.473,315,3.473,316,3.473,317,2.368,318,3.473,319,3.473,320,3.473,321,3.473,322,4.531,323,2.874,324,3.473,325,2.368,326,3.473,327,3.473,328,3.473,329,1.95,330,3.473,331,3.473,332,3.473,333,4.114,334,2.368,335,2.368,336,1.69,337,2.368,338,2.368,339,2.368,340,1.959,341,2.368]],["title/interceptors/GithubInterceptor.html",[144,1.709,247,2.174]],["body/interceptors/GithubInterceptor.html",[3,0.436,4,0.376,9,0.376,11,2.09,17,2.342,22,0.499,28,1.963,31,1.964,36,1.48,38,1.403,39,0.037,40,1.058,41,0.436,42,1.277,44,1.543,51,2.632,59,0.936,60,0.871,65,1.543,76,0.436,77,0.565,127,0.028,128,0.028,144,2.66,207,2.09,239,2.981,248,2.658,250,3.921,255,3.921,256,4.54,257,4.313,258,4.54,260,3.081,262,3.081,263,3.921,264,1.785,268,1.88,342,3.081,343,3.723,344,3.723,345,2.342,346,3.081,347,2.658,348,4.738,349,3.723,350,3.723,351,3.723,352,3.723,353,3.723,354,3.081,355,3.723]],["title/injectables/GithubService.html",[264,1.147,298,1.709]],["body/injectables/GithubService.html",[3,0.344,4,0.297,9,0.297,17,1.847,22,0.393,23,0.947,28,1.677,31,1.106,36,1.733,38,2.041,39,0.037,40,1.539,41,0.634,42,1.858,44,2.171,48,1.483,49,1.483,51,2.962,53,2.987,59,0.893,60,0.687,65,1.217,76,0.344,77,0.446,78,1.648,79,2.601,122,0.446,127,0.024,128,0.024,207,1.648,264,1.525,268,2.645,284,1.648,289,1.847,295,3.35,298,2.272,345,1.847,346,2.43,347,2.096,356,2.43,357,4.633,358,4.048,359,4.048,360,4.048,361,4.048,362,2.936,363,4.994,364,4.048,365,4.048,366,4.048,367,2.936,368,3.142,369,4.048,370,2.936,371,4.048,372,2.936,373,4.048,374,2.473,375,2.936,376,2.43,377,4.048,378,2.936,379,4.048,380,2.936,381,2.936,382,2.936,383,2.936,384,2.936]],["title/interfaces/GithubState.html",[276,0.713,285,1.39]],["body/interfaces/GithubState.html",[3,0.453,4,0.39,9,0.39,22,0.518,23,1.135,39,0.037,41,0.621,47,2.953,59,0.827,76,0.651,122,0.901,127,0.028,128,0.028,230,1.326,231,1.456,274,2.203,276,1.302,277,1.765,278,1.765,279,2.169,280,2.169,281,2.71,282,2.215,283,2.431,284,2.169,285,2.215,286,2.305,287,1.765,288,1.765]],["title/components/HomeComponent.html",[0,0.786,116,1.044]],["body/components/HomeComponent.html",[0,0.878,1,0.656,2,1.254,3,0.204,4,0.176,5,0.977,6,0.977,7,0.977,8,0.977,9,0.176,11,1.542,12,2.429,14,0.977,15,2.627,16,2.137,18,1.542,20,1.542,22,0.233,23,0.643,28,1.138,30,2.759,31,1.035,33,2.945,36,1.656,38,1.456,39,0.037,40,1.27,41,0.599,42,1.326,44,1.601,45,2.361,48,2.257,49,2.582,50,1.242,51,2.363,53,1.951,56,2.431,59,0.918,60,0.407,64,1.242,65,0.721,67,0.977,72,1.44,73,2.816,74,1.095,76,0.204,77,0.264,79,2.361,98,3.003,102,1.44,104,1.095,109,0.795,110,1.542,111,1.542,112,0.977,113,2.169,114,0.977,115,0.977,116,1.326,117,0.977,118,0.656,119,0.879,120,1.542,121,0.656,122,0.516,123,0.543,124,0.879,125,0.977,126,0.977,127,0.016,128,0.016,160,0.795,184,1.44,188,1.44,236,1.242,241,2.627,252,1.951,254,2.429,265,1.242,268,1.387,275,1.242,286,1.601,298,2.627,323,1.44,329,0.977,336,1.242,340,1.44,368,1.728,374,1.254,376,3.481,385,1.44,386,2.747,387,3.403,388,2.747,389,3.403,390,2.169,391,3.403,392,3.403,393,3.403,394,2.747,395,2.747,396,1.44,397,3.192,398,3.873,399,2.747,400,1.74,401,2.747,402,3.864,403,1.74,404,4.471,405,2.747,406,3.864,407,1.74,408,2.747,409,3.403,410,3.864,411,1.74,412,1.74,413,3.864,414,1.74,415,1.44,416,1.961,417,2.747,418,1.961,419,1.961,420,1.74,421,1.74,422,1.728,423,1.74,424,1.74,425,1.74,426,2.747,427,1.44,428,1.74,429,1.74,430,1.74,431,1.74,432,1.74,433,1.74,434,1.242,435,1.74,436,1.74,437,1.74,438,2.747,439,1.74,440,2.747,441,1.74,442,1.74,443,1.74,444,1.74,445,1.74,446,1.74,447,1.74,448,1.74,449,1.74,450,1.74,451,1.74,452,1.74,453,1.74,454,1.44,455,1.74,456,1.74,457,1.74,458,1.44,459,1.74,460,2.747,461,2.747,462,1.74,463,1.74,464,1.74,465,1.74,466,1.74,467,1.74,468,1.74,469,1.74,470,1.74,471,1.74,472,1.74,473,1.74,474,1.74,475,2.747,476,1.74,477,1.74,478,1.242,479,1.44,480,1.242,481,1.44,482,1.44,483,1.74,484,1.74,485,1.74,486,1.74]],["title/classes/PaginatedResult.html",[77,0.462,487,1.915]],["body/classes/PaginatedResult.html",[3,0.494,4,0.427,9,0.427,22,0.566,23,1.199,36,1.6,39,0.036,41,0.6,42,1.968,76,0.6,77,0.641,127,0.03,128,0.03,276,0.988,374,2.519,390,3.354,416,3.014,418,3.014,419,3.014,487,3.223,488,4.221,489,3.014,490,4.565,491,4.221,492,4.24,493,4.221]],["title/interfaces/Pagination.html",[276,0.713,390,1.709]],["body/interfaces/Pagination.html",[3,0.49,4,0.423,9,0.423,22,0.561,23,1.193,39,0.036,41,0.644,76,0.597,77,0.635,127,0.03,128,0.03,276,0.979,278,1.91,374,2.802,390,3.21,416,4.083,418,4.083,419,4.083,487,2.632,489,2.987,490,3.462,492,3.462]],["title/components/RepositoryCardComponent.html",[0,0.786,118,1.147]],["body/components/RepositoryCardComponent.html",[0,1.176,1,1.071,2,1.807,3,0.333,4,0.287,5,1.595,6,1.595,7,1.595,8,1.595,9,0.287,14,1.595,15,3.087,16,2.512,18,2.222,20,2.222,22,0.381,36,0.888,39,0.037,40,1.125,41,0.333,59,0.675,60,0.665,76,0.333,77,0.431,97,3.098,100,2.352,106,1.788,109,1.298,110,2.222,111,2.222,112,1.595,113,2.764,114,1.595,115,1.595,116,0.975,117,1.595,118,1.856,119,2.944,120,2.222,121,1.071,122,0.601,123,0.888,124,1.435,125,1.595,126,1.595,127,0.023,128,0.023,226,2.826,229,2.222,282,2.079,422,2.49,480,2.029,494,3.275,495,2.029,496,3.275,497,3.769,498,3.275,499,3.275,500,2.842,501,3.275,502,2.352,503,3.958,504,3.958,505,3.958,506,3.958,507,2.826,508,3.958,509,3.958,510,3.958,511,3.958,512,3.958,513,3.958,514,3.958,515,2.842,516,2.842,517,3.251,518,2.842,519,2.352,520,2.352,521,2.029,522,3.275,523,3.275,524,2.842,525,2.842,526,2.842,527,2.029,528,1.788,529,2.842,530,2.826,531,2.842,532,2.352]],["title/interfaces/RepositoryState.html",[276,0.713,288,1.39]],["body/interfaces/RepositoryState.html",[3,0.453,4,0.39,9,0.39,22,0.518,23,1.135,39,0.037,41,0.621,47,2.953,59,0.827,76,0.651,122,0.87,127,0.028,128,0.028,230,1.326,231,2.096,274,2.203,276,1.302,277,1.765,278,1.765,279,2.169,280,2.169,281,2.71,282,2.54,283,2.431,284,2.169,285,1.765,286,1.601,287,1.765,288,2.215]],["title/injectables/ToastService.html",[252,1.537,264,1.147]],["body/injectables/ToastService.html",[3,0.423,4,0.365,9,0.365,17,2.27,22,0.484,28,1.925,31,1.36,36,1.604,38,1.936,39,0.037,40,1.46,41,0.602,42,1.762,44,1.925,45,2.607,53,2.901,59,0.792,60,0.845,76,0.423,77,0.548,78,2.026,127,0.027,128,0.027,179,2.987,180,2.577,252,2.345,264,1.75,274,1.936,289,2.27,347,2.577,533,2.987,534,4.251,535,3.609,536,5.424,537,3.609,538,5.424,539,4.645,540,3.609,541,4.645,542,4.645,543,3.609,544,4.645,545,4.645,546,4.645,547,4.645,548,4.645]],["title/interfaces/User.html",[122,0.462,276,0.713]],["body/interfaces/User.html",[3,0.25,4,0.215,9,0.215,22,0.286,23,0.752,39,0.037,40,1.312,41,0.73,47,2.678,53,3.203,76,0.25,122,0.488,127,0.019,128,0.019,230,1.476,276,0.499,278,0.974,374,2.801,528,1.342,549,1.765,550,3.562,551,3.562,552,3.562,553,3.821,554,3.562,555,3.562,556,3.562,557,3.562,558,3.562,559,3.562,560,3.073,561,3.562,562,3.562,563,3.562,564,3.562,565,3.562,566,3.562,567,3.073,568,3.562,569,3.562,570,3.562,571,3.562,572,3.562,573,3.562,574,3.562,575,3.562,576,3.562,577,3.562,578,3.562,579,3.562,580,3.562,581,3.562,582,3.562,583,3.562,584,3.562,585,3.073,586,2.659,587,1.765]],["title/components/UserCardComponent.html",[0,0.786,121,1.147]],["body/components/UserCardComponent.html",[0,1.181,1,1.08,2,1.817,3,0.336,4,0.289,5,1.608,6,1.608,7,1.608,8,1.608,9,0.289,14,1.608,15,3.094,16,2.517,18,2.234,20,2.234,22,0.384,28,1.649,31,1.08,36,1.428,38,1.08,39,0.037,40,1.3,41,0.466,42,0.983,44,1.187,45,1.608,59,0.78,60,0.671,76,0.336,77,0.435,78,1.608,97,2.504,104,1.802,106,1.802,109,1.308,110,2.234,111,2.234,112,1.608,113,2.774,114,1.608,115,1.608,116,0.983,117,1.608,118,1.08,119,1.447,120,2.234,121,1.862,122,0.92,123,0.895,124,1.447,125,1.608,126,1.608,127,0.023,128,0.023,160,1.308,220,3.528,229,2.567,396,2.371,397,3.837,422,2.504,458,2.371,478,2.046,481,2.371,482,2.371,495,2.046,496,4.09,497,3.785,498,3.294,499,3.294,501,3.294,517,2.046,521,2.046,527,2.046,530,2.842,588,4.09,589,4.09,590,3.98,591,2.865,592,2.371,593,2.865,594,3.98,595,3.785,596,3.98,597,2.865,598,3.294,599,3.98,600,3.294,601,2.371,602,2.371,603,2.371,604,2.371,605,2.865]],["title/components/UserDetailsComponent.html",[0,0.786,123,0.951]],["body/components/UserDetailsComponent.html",[0,0.819,1,0.59,2,1.154,3,0.184,4,0.158,5,0.88,6,0.88,7,0.88,8,0.88,9,0.158,11,1.418,12,2.266,14,0.88,15,2.52,16,2.05,18,1.418,20,1.418,22,0.21,23,0.591,28,1.047,30,2.6,31,0.952,32,1.297,33,2.686,36,1.581,38,1.196,39,0.037,40,1.135,41,0.5,42,1.089,44,1.509,45,2.396,48,2.016,49,2.016,51,2.267,53,1.276,56,2.825,59,0.88,60,0.367,61,1.589,65,0.649,67,0.88,75,1.297,76,0.184,77,0.238,79,2.622,97,1.997,99,1.297,104,1.997,105,1.297,106,1.589,109,0.716,110,1.418,111,1.418,112,0.88,113,2.044,114,0.88,115,0.88,116,0.537,117,0.88,118,0.59,119,0.791,120,1.418,121,0.59,122,0.848,123,1.137,124,1.838,125,0.88,126,0.88,127,0.015,128,0.015,160,0.716,207,0.88,223,2.896,230,1.37,231,1.196,239,2.512,252,1.838,254,2.266,268,0.791,275,1.119,281,0.716,282,0.716,291,0.986,292,0.986,293,0.986,329,1.782,336,1.119,368,3.034,374,2.202,397,3.206,398,3.013,422,1.589,478,1.119,479,1.297,480,1.119,502,1.297,517,1.804,519,1.297,520,1.297,521,1.804,522,2.627,523,1.297,527,1.119,528,0.986,530,1.804,532,1.297,560,2.6,567,3.206,585,1.119,589,2.091,592,1.297,598,3.013,600,2.091,601,1.297,602,1.297,603,1.297,604,1.297,606,4.269,607,1.297,608,3.174,609,3.174,610,2.526,611,3.174,612,3.174,613,3.174,614,3.641,615,2.526,616,3.174,617,2.526,618,1.567,619,1.567,620,2.526,621,1.567,622,3.174,623,2.526,624,1.567,625,1.567,626,1.567,627,1.567,628,3.174,629,1.567,630,1.567,631,1.119,632,2.526,633,1.567,634,1.567,635,1.119,636,1.119,637,1.119,638,1.567,639,1.567,640,2.526,641,1.567,642,1.567,643,1.567,644,2.526,645,1.567,646,1.567,647,1.567,648,1.567,649,1.567,650,1.567,651,1.567,652,1.567,653,1.567,654,1.567,655,1.567,656,1.567,657,1.567,658,1.567,659,1.567,660,3.174,661,1.567,662,1.567,663,1.567,664,2.526,665,1.567,666,2.526,667,1.567,668,1.567,669,1.567,670,1.567,671,1.567,672,1.567,673,1.567,674,2.526,675,2.526,676,2.526,677,2.526,678,2.526,679,2.526,680,2.526,681,2.526,682,2.526,683,1.567,684,1.567,685,2.526,686,1.567,687,3.641,688,1.567,689,1.567,690,2.526,691,1.567,692,1.567,693,2.526,694,1.567,695,1.567,696,1.567,697,1.567,698,1.567,699,1.567,700,1.567,701,1.567,702,1.567,703,1.567,704,2.526]],["title/interfaces/UserState.html",[276,0.713,287,1.39]],["body/interfaces/UserState.html",[3,0.459,4,0.396,9,0.396,22,0.525,23,1.145,39,0.037,41,0.573,47,2.963,59,0.835,76,0.655,122,0.927,127,0.029,128,0.029,230,1.344,231,1.476,274,2.011,276,1.308,277,1.789,278,1.789,279,2.199,280,2.199,281,2.718,282,2.235,283,2.465,284,2.199,285,1.789,286,1.623,287,2.235,288,1.789]],["title/modules/UsersModule.html",[129,1.709,705,2.174]],["body/modules/UsersModule.html",[0,1.064,3,0.483,4,0.417,9,0.417,39,0.037,59,0.97,60,0.965,76,0.483,77,0.626,122,0.626,123,1.577,127,0.03,128,0.03,131,1.883,133,2.944,149,2.944,150,3.606,158,2.944,159,2.757,160,1.883,223,2.314,224,2.944,239,2.594,240,3.412,631,2.944,705,3.606,706,4.123,707,5.051,708,4.123]],["title/coverage.html",[709,3.435]],["body/coverage.html",[0,1.223,1,0.854,9,0.229,10,1.875,39,0.037,41,0.265,56,1.425,61,1.425,68,1.617,69,1.617,70,1.617,71,1.617,77,0.344,116,0.777,118,0.854,121,0.854,122,0.344,123,0.708,127,0.02,128,0.02,143,1.272,144,1.272,212,1.617,213,1.617,214,1.617,215,1.617,217,1.425,220,1.617,223,1.272,226,1.617,241,1.272,247,2.4,249,1.875,252,1.144,264,1.511,276,1.203,277,1.034,279,2.49,280,2.49,282,1.034,285,1.034,287,1.034,288,1.034,290,1.875,291,1.425,292,1.425,293,1.425,294,1.617,298,1.272,329,3.533,342,1.875,345,2.115,356,1.875,385,1.875,390,1.272,434,1.617,487,1.425,489,2.4,494,1.875,495,2.4,533,1.875,549,1.875,588,1.875,606,1.875,607,1.875,635,1.617,636,1.617,637,1.617,709,1.875,710,1.875,711,2.266,712,2.266,713,3.362,714,4.436,715,4.964,716,2.266,717,2.266,718,2.266,719,4.54,720,6.185,721,6.185,722,1.875,723,1.875,724,1.875,725,1.875,726,1.875,727,2.266,728,4.368,729,1.875,730,1.875,731,1.875,732,1.875,733,4.663,734,1.875,735,1.875,736,1.875,737,1.875,738,2.266,739,1.875,740,2.266,741,2.266,742,1.875,743,1.875,744,2.782,745,1.875,746,1.875,747,2.266,748,2.266]],["title/dependencies.html",[132,2.055,749,2.106]],["body/dependencies.html",[33,2.445,39,0.037,60,0.909,65,1.61,67,2.733,74,2.445,127,0.029,128,0.029,132,2.181,134,3.476,152,4.029,153,3.476,160,1.774,211,2.774,631,2.774,750,3.216,751,3.886,752,3.886,753,3.886,754,3.886,755,3.886,756,6.008,757,3.886,758,4.869,759,3.886,760,3.886,761,3.216,762,5.739,763,3.886,764,3.886,765,3.886,766,3.886,767,3.886,768,3.886,769,3.886,770,3.886,771,3.886,772,3.886,773,3.886,774,3.886,775,3.886]],["title/index.html",[22,0.341,776,2.106,777,2.106]],["body/index.html",[2,1.243,4,0.275,16,1.753,39,0.023,41,0.319,54,3.682,119,1.375,122,0.868,124,2.44,127,0.03,128,0.023,131,1.243,132,1.528,180,1.943,200,2.253,229,2.156,230,1.317,231,1.447,241,2.86,248,1.943,273,3.682,274,1.026,281,2.206,286,1.591,368,1.712,374,1.243,427,2.253,454,2.253,507,1.943,595,3.682,710,2.253,750,3.178,761,2.253,776,2.253,777,2.253,778,2.722,779,2.742,780,2.722,781,3.84,782,2.722,783,2.722,784,3.84,785,3.84,786,2.722,787,3.84,788,2.722,789,3.84,790,3.682,791,2.722,792,4.449,793,4.832,794,3.84,795,3.84,796,3.84,797,3.84,798,5.434,799,2.722,800,2.722,801,2.722,802,2.722,803,2.722,804,2.722,805,2.722,806,3.84,807,2.722,808,2.722,809,2.722,810,2.722,811,3.84,812,3.84,813,3.84,814,2.722,815,2.722,816,2.722,817,3.84,818,3.84,819,2.722,820,3.682,821,3.84,822,3.84,823,2.722,824,2.722,825,2.722,826,3.84,827,2.722,828,2.722,829,3.84,830,2.722,831,2.722,832,3.84,833,2.722,834,2.722,835,4.832,836,2.253,837,2.722,838,2.722,839,2.722,840,2.722,841,2.722,842,2.722,843,3.682,844,2.722,845,2.722,846,2.722,847,2.722,848,2.722,849,2.722,850,2.722,851,2.722,852,2.722,853,2.722,854,2.722,855,2.722,856,2.722,857,2.722,858,2.722,859,2.722,860,2.722,861,2.722,862,2.722,863,2.722,864,2.722,865,2.722,866,2.722,867,2.722,868,2.722,869,2.722,870,2.722,871,2.722,872,2.722,873,2.722,874,2.722,875,2.722,876,2.722,877,2.722,878,2.722,879,2.722,880,2.722,881,2.722,882,2.722,883,2.722,884,2.722,885,2.722,886,2.722,887,2.722,888,2.722,889,2.722,890,2.722,891,3.84,892,2.722,893,2.722,894,2.722,895,3.84,896,2.722,897,2.722,898,2.722,899,2.722,900,2.722]],["title/modules.html",[131,1.895]],["body/modules.html",[39,0.032,127,0.032,128,0.032,130,2.945,131,2.138,142,2.628,153,3.342,507,3.89,705,3.342,901,4.681,902,4.681,903,5.763,904,5.448]],["title/overview.html",[779,2.963]],["body/overview.html",[1,2.227,2,1.732,39,0.036,77,0.576,98,2.708,109,1.732,116,1.803,118,1.981,121,1.981,123,1.642,127,0.028,128,0.028,129,2.129,130,3.95,131,1.732,132,2.129,133,2.708,134,2.708,135,3.138,136,2.708,137,3.138,138,3.138,139,3.138,140,3.138,141,3.138,142,2.951,143,2.951,144,2.951,145,3.968,146,3.138,147,3.138,159,1.915,278,1.732,289,2.386,779,2.708,905,4.794,906,4.794,907,3.792]],["title/properties.html",[23,0.857,749,2.106]],["body/properties.html",[23,1.133,39,0.034,127,0.033,128,0.033,790,4.006,908,4.841]],["title/routes.html",[159,2.096]],["body/routes.html",[39,0.033,127,0.033,128,0.033,159,2.47]],["title/miscellaneous/variables.html",[909,2.106,910,3.029]],["body/miscellaneous/variables.html",[22,0.203,39,0.038,40,0.697,41,0.558,48,2.998,49,2.998,50,3.708,61,1.544,68,1.752,69,1.752,70,1.752,71,1.752,122,0.595,127,0.014,128,0.014,212,1.752,213,1.752,214,1.752,215,1.752,229,2.748,230,1.517,231,1.582,236,3.159,241,1.739,274,1.477,277,1.415,281,2.406,285,1.121,286,1.974,287,1.415,288,1.415,291,1.544,292,1.544,293,1.544,294,1.752,329,2.915,345,2.243,354,2.031,415,2.031,434,1.752,528,0.951,534,2.951,550,1.251,551,1.251,552,1.251,553,2.031,554,1.251,555,1.251,556,1.251,557,1.251,558,1.251,559,1.251,560,1.079,561,1.251,562,1.251,563,1.251,564,1.251,565,1.251,566,1.251,567,1.079,568,1.251,569,1.251,570,1.251,571,1.251,572,1.251,573,1.251,574,1.251,575,1.251,576,1.251,577,1.251,578,1.251,579,1.251,580,1.251,581,1.251,582,1.251,583,1.251,584,1.251,585,1.079,586,1.251,587,1.251,635,1.752,636,1.752,637,1.752,719,1.251,722,2.031,723,2.031,724,2.031,725,2.031,726,2.031,728,1.251,729,2.564,730,2.564,731,2.564,732,2.564,733,1.251,734,2.951,735,2.951,736,2.951,737,2.951,739,1.251,742,1.251,743,1.251,744,1.251,745,2.031,746,2.031,820,4.887,836,2.031,843,4.051,909,1.251,910,1.251,911,2.454,912,1.512,913,1.512,914,4.609,915,4.896,916,5.107,917,1.512,918,1.512,919,1.512,920,2.454,921,2.454,922,3.566,923,1.512,924,1.512,925,1.512,926,1.512,927,1.512,928,1.512,929,3.098,930,1.512,931,1.512,932,1.512,933,1.512,934,1.512,935,4.896,936,4.764,937,4.896,938,1.512,939,4.609,940,3.566,941,2.454,942,2.454,943,1.512,944,2.454,945,1.512,946,1.512,947,1.512,948,2.454,949,2.454,950,1.512,951,1.512,952,1.512,953,1.512]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":329,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.11.4",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/40",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/80",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":908,"title":{},"body":{"properties.html":{}}}],["10",{"_index":651,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["100",{"_index":479,"title":{},"body":{"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["100px",{"_index":599,"title":{},"body":{"components/UserCardComponent.html":{}}}],["100vh",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["10px",{"_index":532,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["12",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["13.2.0",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["13.3.5",{"_index":791,"title":{},"body":{"index.html":{}}}],["13.3.9",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["130px",{"_index":605,"title":{},"body":{"components/UserCardComponent.html":{}}}],["2",{"_index":847,"title":{},"body":{"index.html":{}}}],["2.6.2",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":548,"title":{},"body":{"injectables/ToastService.html":{}}}],["200px",{"_index":704,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["20px",{"_index":684,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["24px",{"_index":524,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["2px",{"_index":602,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["3",{"_index":905,"title":{},"body":{"overview.html":{}}}],["300",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["300px",{"_index":685,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["4px",{"_index":525,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["5",{"_index":906,"title":{},"body":{"overview.html":{}}}],["5.1.3",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":478,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["576px",{"_index":694,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["5px",{"_index":691,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["7",{"_index":907,"title":{},"body":{"overview.html":{}}}],["7.0.1",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["8.56.0",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["accessible",{"_index":863,"title":{},"body":{"index.html":{}}}],["action.since).pipe",{"_index":320,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["action.username",{"_index":327,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["action.username.trim().length",{"_index":328,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["actions",{"_index":297,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["activatedroute",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["activetabindex",{"_index":611,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["actual_component",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["advanced",{"_index":816,"title":{},"body":{"index.html":{}}}],["afterviewchecked",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["again",{"_index":456,"title":{},"body":{"components/HomeComponent.html":{}}}],["align",{"_index":519,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["allows",{"_index":805,"title":{},"body":{"index.html":{}}}],["angular",{"_index":750,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":631,"title":{},"body":{"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/UserDetailsComponent.html":{}}}],["angular/compiler",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["angular/material/button",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{}}}],["angular/material/progress",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"injectables/ToastService.html":{}}}],["angular/material/tabs",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["animate('0.5s",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animated",{"_index":890,"title":{},"body":{"index.html":{}}}],["animatestate",{"_index":612,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["animation",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["animations",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["api",{"_index":843,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":357,"title":{},"body":{"injectables/GithubService.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["app.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":798,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":130,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":142,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authreq",{"_index":350,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["authtoken",{"_index":348,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["auto",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["automatically",{"_index":799,"title":{},"body":{"index.html":{}}}],["available",{"_index":507,"title":{},"body":{"components/RepositoryCardComponent.html":{},"index.html":{},"modules.html":{}}}],["avatar",{"_index":597,"title":{},"body":{"components/UserCardComponent.html":{}}}],["avatar_url",{"_index":550,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["baseurl:'https://api.github.com",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basic",{"_index":897,"title":{},"body":{"index.html":{}}}],["bedtime",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["between",{"_index":529,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["bio",{"_index":551,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["black",{"_index":486,"title":{},"body":{"components/HomeComponent.html":{}}}],["block",{"_index":699,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["blog",{"_index":552,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{}}}],["bootstrap",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":600,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["bottom",{"_index":698,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["brightness_5",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["browse",{"_index":903,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations';import",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":835,"title":{},"body":{"index.html":{}}}],["building",{"_index":834,"title":{},"body":{"index.html":{}}}],["call_split",{"_index":510,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["calls",{"_index":852,"title":{},"body":{"index.html":{}}}],["card",{"_index":496,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["card'},{'name",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["card.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":498,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["card.component.scss",{"_index":497,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["card.component.ts",{"_index":495,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:11",{"_index":500,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["card.component.ts:12",{"_index":590,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card.component.ts:16",{"_index":591,"title":{},"body":{"components/UserCardComponent.html":{}}}],["card/repository",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/RepositoryCardComponent.html":{},"coverage.html":{}}}],["card/user",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/UserCardComponent.html":{},"coverage.html":{}}}],["catch",{"_index":887,"title":{},"body":{"index.html":{}}}],["catcherror",{"_index":265,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["catcherror((error",{"_index":270,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(error",{"_index":323,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["cd",{"_index":831,"title":{},"body":{"index.html":{}}}],["cdref",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":521,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["change",{"_index":801,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["characters",{"_index":848,"title":{},"body":{"index.html":{}}}],["class",{"_index":77,"title":{"classes/PaginatedResult.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":488,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["cli",{"_index":789,"title":{},"body":{"index.html":{}}}],["click",{"_index":858,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":864,"title":{},"body":{"index.html":{}}}],["clone",{"_index":829,"title":{},"body":{"index.html":{}}}],["close",{"_index":545,"title":{},"body":{"injectables/ToastService.html":{}}}],["cluster_appmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["collaborators",{"_index":553,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":485,"title":{},"body":{"components/HomeComponent.html":{}}}],["column",{"_index":696,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["combinelatest",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["command",{"_index":783,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":707,"title":{},"body":{"modules/UsersModule.html":{}}}],["communicating",{"_index":272,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["company",{"_index":554,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["compodoc:serve",{"_index":786,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["component_template",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{},"overview.html":{}}}],["components/color",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["consistent",{"_index":877,"title":{},"body":{"index.html":{}}}],["console.error('error",{"_index":271,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["const",{"_index":239,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/GithubInterceptor.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["constructor(actions",{"_index":296,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["constructor(http",{"_index":362,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(private",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{}}}],["constructor(router",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{}}}],["constructor(snackbar",{"_index":535,"title":{},"body":{"injectables/ToastService.html":{}}}],["constructor(store",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{}}}],["constructor(toast",{"_index":251,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["container",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["content",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["context",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":827,"title":{},"body":{"index.html":{}}}],["core/interceptors/error.interceptor",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interceptors/github.interceptor",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interfaces/pagination",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/models/user",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/services/github.service",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/services/toast.service",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/store/github.actions",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{}}}],["core/store/github.effects",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["core/store/github.reducer",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["core/store/github.selector",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["coverage",{"_index":709,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created_at",{"_index":555,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["createeffect",{"_index":300,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["createreducer",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpage",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["currentparams",{"_index":666,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentparams.set('tab",{"_index":669,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["currentparams.tostring",{"_index":671,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["cursor",{"_index":481,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{}}}],["dark",{"_index":871,"title":{},"body":{"index.html":{}}}],["data",{"_index":885,"title":{},"body":{"index.html":{}}}],["ddd",{"_index":604,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["debouncetime",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["debouncetime(300",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{}}}],["debouncetime,distinctuntilchanged",{"_index":846,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["default",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["dependencies",{"_index":132,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":506,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["design",{"_index":812,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":866,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":780,"title":{},"body":{"index.html":{}}}],["details",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["details.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["details.component.html",{"_index":610,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.scss",{"_index":609,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts",{"_index":607,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:21",{"_index":630,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:22",{"_index":626,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:23",{"_index":627,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:24",{"_index":629,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:25",{"_index":625,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:26",{"_index":617,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:37",{"_index":619,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:63",{"_index":624,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:67",{"_index":621,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details.component.ts:80",{"_index":618,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["details/user",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["dev",{"_index":795,"title":{},"body":{"index.html":{}}}],["development",{"_index":792,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["direction",{"_index":695,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["directive",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["directives",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["directory",{"_index":830,"title":{},"body":{"index.html":{}}}],["disk_usage",{"_index":556,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["display",{"_index":517,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["displayed",{"_index":853,"title":{},"body":{"index.html":{}}}],["displays",{"_index":806,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":710,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["dropdown",{"_index":860,"title":{},"body":{"index.html":{}}}],["duration",{"_index":547,"title":{},"body":{"injectables/ToastService.html":{}}}],["dynamic",{"_index":761,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["dynamically",{"_index":879,"title":{},"body":{"index.html":{}}}],["ease",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([githubeffects",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["ellipsis",{"_index":703,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["email",{"_index":557,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["emphasizes",{"_index":810,"title":{},"body":{"index.html":{}}}],["empty",{"_index":333,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["enhance",{"_index":893,"title":{},"body":{"index.html":{}}}],["enter",{"_index":856,"title":{},"body":{"index.html":{}}}],["environment",{"_index":345,"title":{},"body":{"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":379,"title":{},"body":{"injectables/GithubService.html":{}}}],["environment.token",{"_index":349,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["error",{"_index":274,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error(message",{"_index":539,"title":{},"body":{"injectables/ToastService.html":{}}}],["errorinterceptor",{"_index":143,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":889,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["event",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.option.value",{"_index":459,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.pageindex",{"_index":463,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.pagesize",{"_index":461,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.preventdefault",{"_index":466,"title":{},"body":{"components/HomeComponent.html":{}}}],["events_url",{"_index":558,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":894,"title":{},"body":{"index.html":{}}}],["export",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["failure",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":817,"title":{},"body":{"index.html":{}}}],["fetching",{"_index":845,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["files",{"_index":802,"title":{},"body":{"index.html":{}}}],["filter",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["filter(value",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["filter/limit",{"_index":851,"title":{},"body":{"index.html":{}}}],["flex",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["followers",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["followers_url",{"_index":559,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["followersreducer",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["followersstate",{"_index":277,"title":{"interfaces/FollowersState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":560,"title":{},"body":{"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["following>div",{"_index":697,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["following_url",{"_index":561,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":526,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["formcontrol",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["formcontrol(false",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["formsmodule",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["friendly",{"_index":803,"title":{},"body":{"index.html":{}}}],["fromstring",{"_index":667,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["function",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{}}}],["functionality",{"_index":838,"title":{},"body":{"index.html":{}}}],["gap",{"_index":531,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["generated",{"_index":788,"title":{},"body":{"index.html":{}}}],["getting",{"_index":776,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuserdetails",{"_index":358,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserdetails(username",{"_index":366,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserfollowers",{"_index":359,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserfollowers(username",{"_index":369,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserrepos",{"_index":360,"title":{},"body":{"injectables/GithubService.html":{}}}],["getuserrepos(username",{"_index":371,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusers",{"_index":361,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusers(pagesize",{"_index":373,"title":{},"body":{"injectables/GithubService.html":{}}}],["ghp_oux4nrfor5rw1oyekcambskcxrhntg2edmng",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gists_url",{"_index":562,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["git",{"_index":826,"title":{},"body":{"index.html":{}}}],["github",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["github.actions",{"_index":341,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions",{"_index":340,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["githubactions.loadfollowerssuccess",{"_index":306,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions.loadrepositoriessuccess",{"_index":311,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions.loaduserssuccess",{"_index":322,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubactions.loadusersuccess",{"_index":316,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["githubeffects",{"_index":217,"title":{"injectables/GithubEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/GithubEffects.html":{},"coverage.html":{}}}],["githubinterceptor",{"_index":144,"title":{"interceptors/GithubInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/GithubInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["githubitat",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["githubreducer",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubrepository",{"_index":282,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["githubservice",{"_index":298,"title":{"injectables/GithubService.html":{}},"body":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["githubstate",{"_index":285,"title":{"interfaces/GithubState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":904,"title":{},"body":{"modules.html":{}}}],["gravatar_id",{"_index":563,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["handle",{"_index":888,"title":{},"body":{"index.html":{}}}],["handling",{"_index":886,"title":{},"body":{"index.html":{}}}],["header",{"_index":874,"title":{},"body":{"index.html":{}}}],["headers",{"_index":352,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["height",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["hidden",{"_index":690,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["hireable",{"_index":564,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["hits",{"_index":855,"title":{},"body":{"index.html":{}}}],["home",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["home.component.html",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":116,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepage",{"_index":839,"title":{},"body":{"index.html":{}}}],["html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["html_url",{"_index":565,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":365,"title":{},"body":{"injectables/GithubService.html":{}}}],["http://localhost:4200",{"_index":797,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":363,"title":{},"body":{"injectables/GithubService.html":{}}}],["httpclientmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":261,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":262,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["httphandler",{"_index":258,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["httpinterceptor",{"_index":263,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["httpparams",{"_index":632,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["httprequest",{"_index":256,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["icon",{"_index":480,"title":{},"body":{"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["id",{"_index":566,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":682,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["implemented",{"_index":873,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["import",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{}}}],["import('./users/users.module').then(m",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["improve",{"_index":880,"title":{},"body":{"index.html":{}}}],["including",{"_index":808,"title":{},"body":{"index.html":{}}}],["incorporates",{"_index":815,"title":{},"body":{"index.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":884,"title":{},"body":{"index.html":{}}}],["indicators",{"_index":882,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{}}}],["initialfollowersstate",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialrepositorystate",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialstate",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialuserstate",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":264,"title":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectables",{"_index":289,"title":{},"body":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{},"overview.html":{}}}],["input",{"_index":501,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["inputs",{"_index":499,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{}}}],["install",{"_index":832,"title":{},"body":{"index.html":{}}}],["installation",{"_index":828,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":250,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["intercept(request",{"_index":255,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["interceptor",{"_index":247,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":248,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{},"index.html":{}}}],["interface",{"_index":276,"title":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["interfaces",{"_index":278,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"interfaces/UserState.html":{},"overview.html":{}}}],["isdark",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["isdarkside",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["isloading",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["item",{"_index":859,"title":{},"body":{"index.html":{}}}],["items",{"_index":520,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["itemsperpage",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["justify",{"_index":527,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["key",{"_index":900,"title":{},"body":{"index.html":{}}}],["later",{"_index":457,"title":{},"body":{"components/HomeComponent.html":{}}}],["layout/animations",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["lazy",{"_index":822,"title":{},"body":{"index.html":{}}}],["left",{"_index":477,"title":{},"body":{"components/HomeComponent.html":{}}}],["legend",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"overview.html":{}}}],["light",{"_index":870,"title":{},"body":{"index.html":{}}}],["limitations",{"_index":844,"title":{},"body":{"index.html":{}}}],["link",{"_index":484,"title":{},"body":{"components/HomeComponent.html":{}}}],["list",{"_index":861,"title":{},"body":{"index.html":{}}}],["lists",{"_index":809,"title":{},"body":{"index.html":{}}}],["literal",{"_index":586,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":243,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":878,"title":{},"body":{"index.html":{}}}],["loadfollowers",{"_index":291,"title":{},"body":{"injectables/GithubEffects.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadfollowerssuccess",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":281,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loadingfollowers",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingrepositories",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["loadinguser",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["loadingusers",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["loadrepositories",{"_index":292,"title":{},"body":{"injectables/GithubEffects.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadrepositoriessuccess",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loaduser",{"_index":293,"title":{},"body":{"injectables/GithubEffects.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadusers",{"_index":294,"title":{},"body":{"injectables/GithubEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadusersfailure",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loaduserssuccess",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadusersuccess",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":567,"title":{},"body":{"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":568,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["lts",{"_index":825,"title":{},"body":{"index.html":{}}}],["m.usersmodule",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["management",{"_index":821,"title":{},"body":{"index.html":{}}}],["map",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubEffects.html":{},"components/HomeComponent.html":{}}}],["map(followers",{"_index":305,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(repositories",{"_index":310,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(response",{"_index":452,"title":{},"body":{"components/HomeComponent.html":{}}}],["map(u",{"_index":331,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(user",{"_index":315,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["map(users",{"_index":321,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["margin",{"_index":522,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["mat",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/RepositoryCardComponent.html":{}}}],["matautocompletemodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompleteselectedevent",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["matautocompletetrigger",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["matbuttonmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["matdatepickermodule",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogmodule",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["maticonmodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["matnativedatemodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidermodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":536,"title":{},"body":{"injectables/ToastService.html":{}}}],["matsnackbarmodule",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":693,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["media",{"_index":692,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["merge",{"_index":473,"title":{},"body":{"components/HomeComponent.html":{}}}],["message",{"_index":541,"title":{},"body":{"injectables/ToastService.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["methods",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["min",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellaneous",{"_index":909,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mobile",{"_index":813,"title":{},"body":{"index.html":{}}}],["models/repository",{"_index":283,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{}}}],["models/user",{"_index":284,"title":{},"body":{"interfaces/FollowersState.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{}}}],["module",{"_index":129,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":131,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multi",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":483,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigate",{"_index":796,"title":{},"body":{"index.html":{}}}],["new",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["newurl",{"_index":670,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["next",{"_index":257,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["next.handle(authreq",{"_index":355,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":269,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":793,"title":{},"body":{"index.html":{}}}],["ngafterviewchecked",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["ngondestroy",{"_index":614,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["ngoninit",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["ngrx",{"_index":876,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":824,"title":{},"body":{"index.html":{}}}],["node_id",{"_index":569,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":842,"title":{},"body":{"index.html":{}}}],["nowrap",{"_index":701,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["npm",{"_index":784,"title":{},"body":{"index.html":{}}}],["null",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":374,"title":{},"body":{"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["object",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["of(githubactions.loadusersfailure",{"_index":324,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype",{"_index":335,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loadfollowers",{"_index":302,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loadrepositories",{"_index":308,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loaduser",{"_index":313,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.loadusers",{"_index":318,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["oftype(githubactions.search",{"_index":326,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["on(loadfollowers",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadfollowerssuccess",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadrepositories",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadrepositoriessuccess",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loaduser",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadusers",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadusersfailure",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loaduserssuccess",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(loadusersuccess",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(search",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":608,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["onselect",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["onselect(event",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["ontabchange",{"_index":615,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["ontabchange(tabindex",{"_index":620,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["operators",{"_index":849,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":814,"title":{},"body":{"index.html":{}}}],["optimized",{"_index":865,"title":{},"body":{"index.html":{}}}],["option",{"_index":857,"title":{},"body":{"index.html":{}}}],["option.login",{"_index":475,"title":{},"body":{"components/HomeComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["organizations_url",{"_index":570,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overflow",{"_index":687,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["overview",{"_index":779,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["owned_private_repos",{"_index":571,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":749,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":595,"title":{},"body":{"components/UserCardComponent.html":{},"index.html":{}}}],["pagechanged",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagechanged(event",{"_index":405,"title":{},"body":{"components/HomeComponent.html":{}}}],["pageevent",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagenumber",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagesize",{"_index":376,"title":{},"body":{"injectables/GithubService.html":{},"components/HomeComponent.html":{}}}],["paginatedresult",{"_index":487,"title":{"classes/PaginatedResult.html":{}},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["pagination",{"_index":390,"title":{"interfaces/Pagination.html":{}},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["paginator",{"_index":476,"title":{},"body":{"components/HomeComponent.html":{}}}],["panelclass",{"_index":546,"title":{},"body":{"injectables/ToastService.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["params.get('username",{"_index":643,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["params['tab",{"_index":648,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["params['username",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{}}}],["parseint(params['tab",{"_index":650,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["path",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["people",{"_index":675,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["performance",{"_index":881,"title":{},"body":{"index.html":{}}}],["person_add",{"_index":677,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["picker",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["plan",{"_index":572,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":804,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":482,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{}}}],["prerequisites",{"_index":823,"title":{},"body":{"index.html":{}}}],["private",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["private_gists",{"_index":573,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["private_repos",{"_index":587,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["prod",{"_index":837,"title":{},"body":{"index.html":{}}}],["production",{"_index":836,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":681,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["profiles",{"_index":807,"title":{},"body":{"index.html":{}}}],["project",{"_index":787,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"properties.html":{}}}],["props",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":899,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":347,"title":{},"body":{"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{}}}],["providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public_gists",{"_index":574,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["public_repos",{"_index":575,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["queryparams",{"_index":471,"title":{},"body":{"components/HomeComponent.html":{}}}],["queryparamshandling",{"_index":472,"title":{},"body":{"components/HomeComponent.html":{}}}],["quick",{"_index":778,"title":{},"body":{"index.html":{}}}],["radius",{"_index":601,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["reactiveformsmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["real",{"_index":840,"title":{},"body":{"index.html":{}}}],["received_events_url",{"_index":576,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["relativeto",{"_index":469,"title":{},"body":{"components/HomeComponent.html":{}}}],["reload",{"_index":800,"title":{},"body":{"index.html":{}}}],["replaceurl",{"_index":474,"title":{},"body":{"components/HomeComponent.html":{}}}],["repo",{"_index":515,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repos_url",{"_index":577,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repositoriesreducer",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["repository.description",{"_index":505,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.forks_count",{"_index":511,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.full_name",{"_index":504,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.name",{"_index":503,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.stargazers_count",{"_index":509,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repository.watchers_count",{"_index":513,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["repositorycardcomponent",{"_index":118,"title":{"components/RepositoryCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["repositorystate",{"_index":288,"title":{"interfaces/RepositoryState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":260,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{}}}],["request.clone",{"_index":351,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["request.headers.set('authorization",{"_index":353,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["require",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response.items",{"_index":453,"title":{},"body":{"components/HomeComponent.html":{}}}],["responsive",{"_index":811,"title":{},"body":{"index.html":{}}}],["result",{"_index":490,"title":{},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["results",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":268,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["right",{"_index":523,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"injectables/ToastService.html":{}}}],["root'},{'name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["route",{"_index":616,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["routeparamsubscription",{"_index":613,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["router",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["routermodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{}}}],["routermodule.forchild(routes",{"_index":708,"title":{},"body":{"modules/UsersModule.html":{}}}],["routermodule.forroot(routes",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":159,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":238,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":785,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":338,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["same",{"_index":854,"title":{},"body":{"index.html":{}}}],["search",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["search(event",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchcontrol",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{}}}],["searching",{"_index":454,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["searchresult",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchterm",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["searchusers",{"_index":295,"title":{},"body":{"injectables/GithubEffects.html":{},"injectables/GithubService.html":{}}}],["searchusers(username",{"_index":377,"title":{},"body":{"injectables/GithubService.html":{}}}],["see",{"_index":781,"title":{},"body":{"index.html":{}}}],["select",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["selected",{"_index":862,"title":{},"body":{"index.html":{}}}],["selectfollowersloading",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgithubfollowers",{"_index":635,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgithubrepositories",{"_index":636,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgithubusers",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectgitubuser",{"_index":637,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["selectrepositoriesloading",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserfeature",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserfollowers",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserloading",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuserrepositories",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectusersfeature",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectusersloading",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":794,"title":{},"body":{"index.html":{}}}],["server",{"_index":273,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["services/github.service",{"_index":339,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["services/toast.service",{"_index":267,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["shared/repository",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/user",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["showuserdetails",{"_index":589,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["showuserdetails(user",{"_index":623,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["sidenav",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["site_admin",{"_index":578,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["skip(1",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{}}}],["slide",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["slideinanimation",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["smooth",{"_index":892,"title":{},"body":{"index.html":{}}}],["snackbar",{"_index":538,"title":{},"body":{"injectables/ToastService.html":{}}}],["solid",{"_index":603,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["space",{"_index":528,"title":{},"body":{"components/RepositoryCardComponent.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["spacer",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["span",{"_index":518,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["spec\\.ts",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["spinners",{"_index":883,"title":{},"body":{"index.html":{}}}],["src/.../animations.ts",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.actions.ts",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.reducer.ts",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.selector.ts",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":237,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/interceptors/error.interceptor.ts",{"_index":249,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:13",{"_index":253,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/error.interceptor.ts:17",{"_index":259,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/core/interceptors/github.interceptor.ts",{"_index":342,"title":{},"body":{"interceptors/GithubInterceptor.html":{},"coverage.html":{}}}],["src/app/core/interceptors/github.interceptor.ts:13",{"_index":344,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["src/app/core/interceptors/github.interceptor.ts:9",{"_index":343,"title":{},"body":{"interceptors/GithubInterceptor.html":{}}}],["src/app/core/interfaces/github",{"_index":279,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["src/app/core/interfaces/pagination.ts",{"_index":489,"title":{},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"coverage.html":{}}}],["src/app/core/interfaces/pagination.ts:8",{"_index":493,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/app/core/interfaces/pagination.ts:9",{"_index":491,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/app/core/models/repository",{"_index":502,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["src/app/core/models/repository.ts",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["src/app/core/models/user",{"_index":592,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["src/app/core/models/user.ts",{"_index":549,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/services/github.service.ts",{"_index":356,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/app/core/services/github.service.ts:11",{"_index":364,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:15",{"_index":378,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:19",{"_index":375,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:23",{"_index":367,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:27",{"_index":372,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/github.service.ts:31",{"_index":370,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/app/core/services/toast.service",{"_index":633,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/core/services/toast.service.ts",{"_index":533,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/core/services/toast.service.ts:11",{"_index":543,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:15",{"_index":540,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/services/toast.service.ts:7",{"_index":537,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/core/store/github.actions",{"_index":634,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/core/store/github.actions.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/github.effects.ts",{"_index":290,"title":{},"body":{"injectables/GithubEffects.html":{},"coverage.html":{}}}],["src/app/core/store/github.effects.ts:10",{"_index":325,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:20",{"_index":307,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:29",{"_index":317,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:38",{"_index":312,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:47",{"_index":334,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.effects.ts:59",{"_index":299,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["src/app/core/store/github.reducer.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/github.selector",{"_index":638,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/core/store/github.selector.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/home/home.component.ts",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:23",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:28",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:29",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:30",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:31",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:32",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:34",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:48",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:73",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:77",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:83",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/layout/animations",{"_index":639,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["src/app/layout/animations.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/repository",{"_index":494,"title":{},"body":{"components/RepositoryCardComponent.html":{},"coverage.html":{}}}],["src/app/shared/user",{"_index":588,"title":{},"body":{"components/UserCardComponent.html":{},"coverage.html":{}}}],["src/app/users/user",{"_index":606,"title":{},"body":{"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["src/app/users/users.module.ts",{"_index":706,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/environments/environment",{"_index":346,"title":{},"body":{"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{}}}],["src/environments/environment.prod.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["star",{"_index":508,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["starred_url",{"_index":579,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":833,"title":{},"body":{"index.html":{}}}],["started",{"_index":777,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":820,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["state.followers",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.github",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.loading",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.repositories",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ts",{"_index":280,"title":{},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["state.user",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.users",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":516,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["store",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"dependencies.html":{}}}],["storemodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserDetailsComponent.html":{}}}],["style",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["subscribe(username",{"_index":645,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["subscription",{"_index":628,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["subscriptions_url",{"_index":580,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":534,"title":{},"body":{"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["success(message",{"_index":542,"title":{},"body":{"injectables/ToastService.html":{}}}],["support",{"_index":901,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":869,"title":{},"body":{"index.html":{}}}],["svg",{"_index":902,"title":{},"body":{"modules.html":{}}}],["switching",{"_index":819,"title":{},"body":{"index.html":{}}}],["switchmap",{"_index":336,"title":{},"body":{"injectables/GithubEffects.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["switchmap(action",{"_index":303,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["switchmap(params",{"_index":642,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["switchmap(value",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{}}}],["t",{"_index":492,"title":{},"body":{"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["tab",{"_index":686,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["tabindex",{"_index":622,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["table",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":337,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["testing",{"_index":896,"title":{},"body":{"index.html":{}}}],["tests",{"_index":898,"title":{},"body":{"index.html":{}}}],["text",{"_index":702,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["theme",{"_index":818,"title":{},"body":{"index.html":{}}}],["themes",{"_index":872,"title":{},"body":{"index.html":{}}}],["theming",{"_index":868,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":301,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.activatedroute",{"_index":470,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.activatedroute.queryparams.subscribe(params",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.activetabindex",{"_index":649,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.animatestate",{"_index":644,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.cdref.detectchanges",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["this.followers",{"_index":655,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.githubservice.getuserdetails(action.username).pipe",{"_index":314,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.getuserfollowers(action.username).pipe",{"_index":304,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.getuserrepos(action.username).pipe",{"_index":309,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.getusers(action.pagesize",{"_index":319,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.searchusers(action.username).pipe",{"_index":330,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["this.githubservice.searchusers(value",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get(`${this.apiurl}/search/users?q=${username",{"_index":380,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users/${username",{"_index":382,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users/${username}/followers",{"_index":384,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users/${username}/repos",{"_index":383,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.http.get(`${this.apiurl}/users?since=${since}&per_page=${pagesize",{"_index":381,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.isdarkside",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isloading",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this.location.go(newurl",{"_index":672,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.location.path",{"_index":663,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.ontabchange(this.activetabindex",{"_index":652,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.pagesize",{"_index":460,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.pagination!.currentpage",{"_index":462,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.pagination.itemsperpage",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.pagination?.currentpage",{"_index":464,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.repositories",{"_index":657,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.route.parammap.pipe",{"_index":641,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":647,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.routeparamsubscription",{"_index":640,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.routeparamsubscription.unsubscribe",{"_index":673,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.router.navigate(['/search",{"_index":468,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/user",{"_index":659,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.router.navigate(['user",{"_index":458,"title":{},"body":{"components/HomeComponent.html":{},"components/UserCardComponent.html":{}}}],["this.router.routereusestrategy.shouldreuseroute",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.searchcontrol.valuechanges.pipe",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.searchresult",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.snackbar.open(message",{"_index":544,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.store.dispatch(githubactions.loadusers",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.store.dispatch(githubactions.search",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.store.dispatch(loadfollowers",{"_index":662,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.dispatch(loadrepositories",{"_index":661,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.dispatch(loaduser",{"_index":646,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.pipe(select(selectfollowersloading",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectrepositoriesloading",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectuserloading",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectusersloading",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(selectgithubfollowers",{"_index":656,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.select(selectgithubrepositories",{"_index":658,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.store.select(selectgithubusers",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.store.select(selectgitubuser",{"_index":654,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.toast.error('error",{"_index":275,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["this.togglecontrol.valuechanges.subscribe(isdark",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":653,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["this.user?.login",{"_index":593,"title":{},"body":{"components/UserCardComponent.html":{}}}],["this.users",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["throwerror",{"_index":266,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["time",{"_index":841,"title":{},"body":{"index.html":{}}}],["title",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":254,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{}}}],["toastservice",{"_index":252,"title":{"injectables/ToastService.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{}}}],["toggle",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["togglecontrol",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":354,"title":{},"body":{"interceptors/GithubInterceptor.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":683,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["total_private_repos",{"_index":581,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["totalitems",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{}}}],["transform",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition(':enter",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transitions",{"_index":891,"title":{},"body":{"index.html":{}}}],["translatex(0",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatex(100",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["trigger",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["trigger('slideinanimation",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger.closepanel",{"_index":467,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":455,"title":{},"body":{"components/HomeComponent.html":{}}}],["tslib",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["twitter_username",{"_index":582,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["two_factor_authentication",{"_index":583,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interceptors/GithubInterceptor.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"classes/PaginatedResult.html":{},"interfaces/Pagination.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["u.items",{"_index":332,"title":{},"body":{"injectables/GithubEffects.html":{}}}],["undefined",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["unit",{"_index":895,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":584,"title":{},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":585,"title":{},"body":{"interfaces/User.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["url.split('?')[0",{"_index":665,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["url.split('?')[1",{"_index":668,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["urlwithoutparams",{"_index":664,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["useclass",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":850,"title":{},"body":{"index.html":{}}}],["user",{"_index":122,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"interfaces/RepositoryState.html":{},"interfaces/User.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"interfaces/UserState.html":{},"modules/UsersModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user.blog",{"_index":680,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.followers",{"_index":676,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.following",{"_index":678,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.login",{"_index":660,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user.name",{"_index":674,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["user/:username",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user?.login",{"_index":594,"title":{},"body":{"components/UserCardComponent.html":{}}}],["user?.type",{"_index":596,"title":{},"body":{"components/UserCardComponent.html":{}}}],["usercardcomponent",{"_index":121,"title":{"components/UserCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userdetailscomponent",{"_index":123,"title":{"components/UserDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":368,"title":{},"body":{"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"index.html":{}}}],["userreducer",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":286,"title":{},"body":{"interfaces/FollowersState.html":{},"injectables/GithubEffects.html":{},"interfaces/GithubState.html":{},"components/HomeComponent.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["users/user",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["usersmodule",{"_index":705,"title":{"modules/UsersModule.html":{}},"body":{"modules/UsersModule.html":{},"modules.html":{}}}],["usersstate",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userstate",{"_index":287,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/FollowersState.html":{},"interfaces/GithubState.html":{},"interfaces/RepositoryState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":782,"title":{},"body":{"index.html":{}}}],["utilizes",{"_index":875,"title":{},"body":{"index.html":{}}}],["value",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/GithubEffects.html":{},"injectables/GithubService.html":{},"components/HomeComponent.html":{},"components/UserDetailsComponent.html":{},"miscellaneous/variables.html":{}}}],["value.trim().length",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["value:string",{"_index":465,"title":{},"body":{"components/HomeComponent.html":{}}}],["var",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["variable",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":910,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":790,"title":{},"body":{"index.html":{},"properties.html":{}}}],["view",{"_index":514,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["viewing",{"_index":867,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":512,"title":{},"body":{"components/RepositoryCardComponent.html":{}}}],["void",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["web",{"_index":679,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["white",{"_index":700,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["width",{"_index":598,"title":{},"body":{"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["wrap",{"_index":530,"title":{},"body":{"components/RepositoryCardComponent.html":{},"components/UserCardComponent.html":{},"components/UserDetailsComponent.html":{}}}],["x",{"_index":689,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["y",{"_index":688,"title":{},"body":{"components/UserDetailsComponent.html":{}}}],["zone.js",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkSide\n                            \n                            \n                                isLoading$\n                            \n                            \n                                title\n                            \n                            \n                                toggleControl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkSide\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Githubitat'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { slideInAnimation } from './layout/animations';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { Store, select } from '@ngrx/store';\nimport {\n  selectFollowersLoading,\n  selectRepositoriesLoading,\n  selectUserLoading,\n  selectUsersLoading\n} from './core/store/github.selector';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent implements OnInit, AfterViewChecked{\n\n  isLoading$: Observable;\n  title = 'Githubitat';\n  toggleControl = new FormControl(false);\n  isDarkSide : boolean = false;\n\n  constructor(private store: Store,\n    private cdRef: ChangeDetectorRef) {\n    this.isLoading$ = combineLatest([\n      this.store.pipe(select(selectUsersLoading)),\n      this.store.pipe(select(selectUserLoading)),\n      this.store.pipe(select(selectRepositoriesLoading)),\n      this.store.pipe(select(selectFollowersLoading)),\n    ]).pipe(\n      map(([\n        loadingUsers,\n        loadingUser,\n        loadingRepositories,\n        loadingFollowers]) => loadingUsers || loadingUser || loadingRepositories || loadingFollowers)\n    );\n  }\n  ngOnInit(): void {\n    this.toggleControl.valueChanges.subscribe(isDark => {\n      this.isDarkSide = isDark;\n   });\n  }\n\n  ngAfterViewChecked() {\n    this.cdRef.detectChanges();\n  }\n}\n\n    \n\n    \n        \n\tGithubitat\n\t\n\tbrightness_5\n\t\n\t\n\tbedtime\n\n\n\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .spacer {\n  flex: 1 1 auto;\n}\n\nmat-sidenav-container {\n  min-height: 100vh;\n}\n\nmat-sidenav-content {\n  min-height: 100vh;\n}\n\n.slide-animation {\n  min-height: 100vh;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\tGithubitat\t\tbrightness_5\t\t\tbedtime\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nRepositoryCardComponent\n\nRepositoryCardComponent\n\nAppModule -->\n\nRepositoryCardComponent->AppModule\n\n\n\n\n\nUserCardComponent\n\nUserCardComponent\n\nAppModule -->\n\nUserCardComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nGithubInterceptor\n\nGithubInterceptor\n\nAppModule -->\n\nGithubInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            RepositoryCardComponent\n                        \n                        \n                            UserCardComponent\n                        \n                        \n                            UserDetailsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ErrorInterceptor\n                        \n                        \n                            GithubInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';import { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatIconModule} from '@angular/material/icon';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatDividerModule} from '@angular/material/divider';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSidenavModule} from '@angular/material/sidenav'\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\n\nimport { ErrorInterceptor } from './core/interceptors/error.interceptor';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { followersReducer, githubReducer, repositoriesReducer, userReducer } from './core/store/github.reducer';\nimport { GithubEffects } from './core/store/github.effects';\nimport { UserCardComponent } from './shared/user-card/user-card.component';\nimport { UserDetailsComponent } from './users/user-details/user-details.component';\nimport { RepositoryCardComponent } from './shared/repository-card/repository-card.component';\nimport { GithubInterceptor } from './core/interceptors/github.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    UserCardComponent,\n    UserDetailsComponent,\n    RepositoryCardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    StoreModule.forRoot({\n      github: githubReducer,\n      user: userReducer,\n      followers: followersReducer,\n      repositories: repositoriesReducer,\n    }),\n    EffectsModule.forRoot([GithubEffects]),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n\n    MatSliderModule,\n    MatCardModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatButtonModule,\n    MatIconModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatPaginatorModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: GithubInterceptor, multi: true },\n],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { UserDetailsComponent } from './users/user-details/user-details.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: HomeComponent\n  },\n  {\n    path: 'search', component: HomeComponent\n  },\n  {\n    path: 'user/:username',\n    loadChildren: () => \"import('./users/users.module').then(m => m.UsersModule)\"\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/error.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toast: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/error.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/interceptors/error.interceptor.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest<>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs';\nimport { ToastService } from '../services/toast.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private toast: ToastService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        console.error('Error communicating with a server', error);\n        this.toast.error('Error communicating with a server');\n        return throwError(() => error)\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FollowersState.html":{"url":"interfaces/FollowersState.html","title":"interface - FollowersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FollowersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubEffects.html":{"url":"injectables/GithubEffects.html","title":"injectable - GithubEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/store/github.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadFollowers$\n                            \n                            \n                                loadRepositories$\n                            \n                            \n                                loadUser$\n                            \n                            \n                                loadUsers$\n                            \n                            \n                                searchUsers$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, githubService: GithubService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/store/github.effects.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadFollowers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadFollowers),\n    switchMap(action =>\n      this.githubService.getUserFollowers(action.username).pipe(\n        map(followers => GithubActions.loadFollowersSuccess({ followers }))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadRepositories),\n    switchMap(action =>\n      this.githubService.getUserRepos(action.username).pipe(\n        map(repositories => GithubActions.loadRepositoriesSuccess({ repositories }))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUser),\n    switchMap(action =>\n      this.githubService.getUserDetails(action.username).pipe(\n        map(user => GithubActions.loadUserSuccess({ user }))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUsers),\n    switchMap(action =>\n      this.githubService.getUsers(action.pageSize, action.since).pipe(\n        map(users => GithubActions.loadUsersSuccess({ users })),\n        catchError(error => of(GithubActions.loadUsersFailure({ error })))\n      )\n    )\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.search),\n    switchMap(action => {\n      if (action.username && action.username.trim().length > 0) {\n        return this.githubService.searchUsers(action.username).pipe(\n          map(u => GithubActions.loadUsersSuccess({ users: u.items })),\n        )\n      }\n      else {\n        return EMPTY;\n      }\n    })\n  ))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/store/github.effects.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EMPTY, of } from 'rxjs';\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\nimport { GithubService } from '../services/github.service';\nimport * as GithubActions from './github.actions';\n\n@Injectable()\nexport class GithubEffects {\n  loadUsers$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUsers),\n    switchMap(action =>\n      this.githubService.getUsers(action.pageSize, action.since).pipe(\n        map(users => GithubActions.loadUsersSuccess({ users })),\n        catchError(error => of(GithubActions.loadUsersFailure({ error })))\n      )\n    )\n  ));\n\n  loadFollowers$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadFollowers),\n    switchMap(action =>\n      this.githubService.getUserFollowers(action.username).pipe(\n        map(followers => GithubActions.loadFollowersSuccess({ followers }))\n      )\n    )\n  ));\n\n  loadUser$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadUser),\n    switchMap(action =>\n      this.githubService.getUserDetails(action.username).pipe(\n        map(user => GithubActions.loadUserSuccess({ user }))\n      )\n    )\n  ));\n\n  loadRepositories$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.loadRepositories),\n    switchMap(action =>\n      this.githubService.getUserRepos(action.username).pipe(\n        map(repositories => GithubActions.loadRepositoriesSuccess({ repositories }))\n      )\n    )\n  ));\n\n  searchUsers$ = createEffect(() => this.actions$.pipe(\n    ofType(GithubActions.search),\n    switchMap(action => {\n      if (action.username && action.username.trim().length > 0) {\n        return this.githubService.searchUsers(action.username).pipe(\n          map(u => GithubActions.loadUsersSuccess({ users: u.items })),\n        )\n      }\n      else {\n        return EMPTY;\n      }\n    })\n  ));\n\n\n  constructor(\n    private actions$: Actions,\n    private githubService: GithubService\n  ) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/GithubInterceptor.html":{"url":"interceptors/GithubInterceptor.html","title":"interceptor - GithubInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  GithubInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/github.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/github.interceptor.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/interceptors/github.interceptor.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubInterceptor implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const authToken = environment.token\n\n    const authReq = request.clone({\n      headers: request.headers.set('Authorization', `token  ${authToken}`)\n    });\n\n    return next.handle(authReq);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDetails\n                            \n                            \n                                getUserFollowers\n                            \n                            \n                                getUserRepos\n                            \n                            \n                                getUsers\n                            \n                            \n                                searchUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/github.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDetails\n                        \n                    \n                \n            \n            \n                \ngetUserDetails(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFollowers\n                        \n                    \n                \n            \n            \n                \ngetUserFollowers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserRepos\n                        \n                    \n                \n            \n            \n                \ngetUserRepos(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(pageSize: number, since: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                since\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchUsers\n                        \n                    \n                \n            \n            \n                \nsearchUsers(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/github.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.baseUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/github.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GithubService {\n  private apiUrl = environment.baseUrl;\n\n  constructor(private http: HttpClient) { }\n\n  searchUsers(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/search/users?q=${username}`);\n  }\n\n  getUsers(pageSize: number, since: number): Observable {\n    return this.http.get(`${this.apiUrl}/users?since=${since}&per_page=${pageSize}`);\n  }\n\n  getUserDetails(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/users/${username}`);\n  }\n\n  getUserRepos(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/users/${username}/repos`);\n  }\n\n  getUserFollowers(username: string): Observable {\n    return this.http.get(`${this.apiUrl}/users/${username}/followers`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubState.html":{"url":"interfaces/GithubState.html","title":"interface - GithubState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                pageSize\n                            \n                            \n                                pagination\n                            \n                            \n                                searchControl\n                            \n                            \n                                searchResult$\n                            \n                            \n                                searchTerm\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                pageChanged\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store, githubService: GithubService, toast: ToastService, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MatAutocompleteSelectedEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageChanged\n                        \n                    \n                \n            \n            \n                \npageChanged(event: PageEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PageEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n            \n                \nsearch(event: Event, value: string, trigger: MatAutocompleteTrigger)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/home/home.component.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trigger\n                                            \n                                                        MatAutocompleteTrigger\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    totalItems: 300,\n    currentPage: 1,\n    itemsPerPage: 12,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchResult$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, catchError, debounceTime, distinctUntilChanged, filter, map, of, skip, switchMap } from 'rxjs';\nimport { Pagination } from '../core/interfaces/pagination';\nimport { User } from '../core/models/user';\nimport { GithubService } from '../core/services/github.service';\nimport { ToastService } from '../core/services/toast.service';\nimport * as GithubActions from '../core/store/github.actions';\nimport { selectGithubUsers } from '../core/store/github.selector';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  pagination = {\n    totalItems: 300,\n    currentPage: 1,\n    itemsPerPage: 12,\n  }\n  pageNumber = 1;\n  pageSize = 12;\n  searchControl = new FormControl();\n  searchTerm: string = '';\n  searchResult$: Observable | undefined;\n\n  users$: Observable = new Observable;\n\n  constructor(\n    private router: Router,\n    private store: Store,\n    private githubService: GithubService,\n    private toast: ToastService,\n    private activatedRoute: ActivatedRoute\n  ) { \n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\n      return false;\n    };\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      if (params['username']) {\n        this.store.dispatch(GithubActions.search({ username: params['username'] }));\n      }\n      else {\n        this.store.dispatch(GithubActions.loadUsers({ pageSize: this.pagination.itemsPerPage, since: 0 }));\n      }\n      this.users$ = this.store.select(selectGithubUsers);\n    });\n\n    this.searchResult$ = this.searchControl.valueChanges.pipe(\n      skip(1),\n      debounceTime(300),\n      distinctUntilChanged(),\n      filter(value => value && value.trim().length > 1),\n      switchMap(value => this.githubService.searchUsers(value)),\n      map(response => response.items),\n      catchError(error => {\n        this.toast.error('Error searching users, try again later');\n        return of([]);\n      })\n    );\n  }\n\n  onSelect(event: MatAutocompleteSelectedEvent) {\n    this.router.navigate(['user/', event.option.value]);\n  }\n\n  pageChanged(event: PageEvent) {\n    this.pageSize = event.pageSize;\n    this.pagination!.currentPage = event.pageSize * event.pageIndex;\n    this.store.dispatch(GithubActions.loadUsers({ pageSize: this.pageSize, since: this.pagination?.currentPage! }))\n  }\n\n  search(event: Event, value:string, trigger: MatAutocompleteTrigger) {\n    event.preventDefault();\n    trigger.closePanel();\n    this.router.navigate(['/search'], \n      {\n        relativeTo: this.activatedRoute,\n        queryParams: { username: value },\n        queryParamsHandling: 'merge',\n        replaceUrl: true\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Search\n                \n                search\n                \n                    \n                        {{option.login}}\n                    \n                \n            \n        \n    \n    \n        \n            \n        \n    \n\n\n    \n    \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .paginator {\n  left: 50%;\n}\n\n.container {\n  height: 100%;\n}\n\n.search-icon{\n  cursor: pointer;\n}\n\n.nav-link{\n  color: black;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Search                                search                                                            {{option.login}}                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResult.html":{"url":"classes/PaginatedResult.html","title":"class - PaginatedResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                pagination\n                            \n                            \n                                    Optional\n                                result\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        pagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Pagination\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/interfaces/pagination.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/interfaces/pagination.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult {\n    result?: T;\n    pagination?: Pagination;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/pagination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentPage\n                                        \n                                \n                                \n                                        \n                                            itemsPerPage\n                                        \n                                \n                                \n                                        \n                                            totalItems\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itemsPerPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itemsPerPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n}\n\nexport class PaginatedResult {\n    result?: T;\n    pagination?: Pagination;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepositoryCardComponent.html":{"url":"components/RepositoryCardComponent.html","title":"component - RepositoryCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RepositoryCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/repository-card/repository-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-repository-card\n            \n\n\n\n            \n                styleUrls\n                ./repository-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./repository-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                repository\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        repository\n                    \n                \n                \n                    \n                        Type :         GitHubRepository | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/repository-card/repository-card.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { GitHubRepository } from 'src/app/core/models/repository';\n\n@Component({\n  selector: 'app-repository-card',\n  templateUrl: './repository-card.component.html',\n  styleUrls: ['./repository-card.component.scss']\n})\nexport class RepositoryCardComponent {\n\n  @Input() repository: GitHubRepository | undefined;\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ repository.name }}\n            \n            \n                {{ repository.full_name }}\n            \n            \n            \n                {{ repository.description || 'No description available' }}\n            \n            \n            \n                \n                    star {{ repository.stargazers_count }}\n                    call_split {{ repository.forks_count }}\n                    visibility {{ repository.watchers_count }}\n                \n                View on GitHub\n            \n        \n    \n\n    \n\n    \n                \n                    ./repository-card.component.scss\n                \n                .repo-stats {\n  display: flex;\n\n  span {\n    display: flex;\n    align-items: center;\n    margin-right: 24px;\n  }\n\n  mat-icon {\n    margin-right: 4px;\n  }\n}\n\n.footer {\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ repository.name }}                                        {{ repository.full_name }}                                                    {{ repository.description || \\'No description available\\' }}                                                                        star {{ repository.stargazers_count }}                    call_split {{ repository.forks_count }}                    visibility {{ repository.watchers_count }}                                View on GitHub                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepositoryCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryState.html":{"url":"interfaces/RepositoryState.html","title":"interface - RepositoryState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RepositoryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            repositories\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repositories\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repositories:         GitHubRepository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GitHubRepository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/toast.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toast.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/toast.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(private snackbar: MatSnackBar) { }\n\n  success(message: string) {\n    this.snackbar.open(message, \"Close\", { panelClass: ['snackbar-success'], duration: 2000 })\n  }\n\n  error(message: string) {\n    this.snackbar.open(message, \"Close\", { panelClass: ['snackbar-error'], duration: 2000 })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatar_url\n                                        \n                                \n                                \n                                        \n                                            bio\n                                        \n                                \n                                \n                                        \n                                            blog\n                                        \n                                \n                                \n                                        \n                                            collaborators\n                                        \n                                \n                                \n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            disk_usage\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            events_url\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            followers_url\n                                        \n                                \n                                \n                                        \n                                            following\n                                        \n                                \n                                \n                                        \n                                            following_url\n                                        \n                                \n                                \n                                        \n                                            gists_url\n                                        \n                                \n                                \n                                        \n                                            gravatar_id\n                                        \n                                \n                                \n                                        \n                                            hireable\n                                        \n                                \n                                \n                                        \n                                            html_url\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            node_id\n                                        \n                                \n                                \n                                        \n                                            organizations_url\n                                        \n                                \n                                \n                                        \n                                            owned_private_repos\n                                        \n                                \n                                \n                                        \n                                            plan\n                                        \n                                \n                                \n                                        \n                                            private_gists\n                                        \n                                \n                                \n                                        \n                                            public_gists\n                                        \n                                \n                                \n                                        \n                                            public_repos\n                                        \n                                \n                                \n                                        \n                                            received_events_url\n                                        \n                                \n                                \n                                        \n                                            repos_url\n                                        \n                                \n                                \n                                        \n                                            site_admin\n                                        \n                                \n                                \n                                        \n                                            starred_url\n                                        \n                                \n                                \n                                        \n                                            subscriptions_url\n                                        \n                                \n                                \n                                        \n                                            total_private_repos\n                                        \n                                \n                                \n                                        \n                                            twitter_username\n                                        \n                                \n                                \n                                        \n                                            two_factor_authentication\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blog\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blog:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collaborators\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collaborators:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disk_usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disk_usage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gists_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gists_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gravatar_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gravatar_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hireable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hireable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizations_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizations_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owned_private_repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owned_private_repos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plan:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private_gists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private_gists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_gists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_gists:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        public_repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_repos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        received_events_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        received_events_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        site_admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        site_admin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starred_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        starred_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subscriptions_url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subscriptions_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_private_repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_private_repos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        twitter_username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        twitter_username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        two_factor_authentication\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        two_factor_authentication:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n  login: string;\n  id: number;\n  node_id: string;\n  avatar_url: string;\n  gravatar_id: string;\n  url: string;\n  html_url: string;\n  followers_url: string;\n  following_url: string;\n  gists_url: string;\n  starred_url: string;\n  subscriptions_url: string;\n  organizations_url: string;\n  repos_url: string;\n  events_url: string;\n  received_events_url: string;\n  type: string;\n  site_admin: boolean;\n  name: string;\n  company: string;\n  blog: string;\n  location: string;\n  email: string;\n  hireable: boolean;\n  bio: string;\n  twitter_username: string;\n  public_repos: number;\n  public_gists: number;\n  followers: number;\n  following: number;\n  created_at: string;\n  updated_at: string;\n  private_gists: number;\n  total_private_repos: number;\n  owned_private_repos: number;\n  disk_usage: number;\n  collaborators: number;\n  two_factor_authentication: boolean;\n  plan: {\n    name: string;\n    space: number;\n    private_repos: number;\n    collaborators: number;\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCardComponent.html":{"url":"components/UserCardComponent.html","title":"component - UserCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/user-card/user-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-card\n            \n\n\n\n            \n                styleUrls\n                ./user-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showUserDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/user-card/user-card.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/user-card/user-card.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        showUserDetails\n                        \n                    \n                \n            \n            \n                \nshowUserDetails()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/user-card/user-card.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/core/models/user';\n\n@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss']\n})\nexport class UserCardComponent {\n\n  @Input() user: User | undefined;\n\n  constructor(private router: Router) { }\n\n  showUserDetails() {\n    this.router.navigate(['user/', this.user?.login]);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n            {{user?.login}}\n            \n                Github page\n            \n        \n    \n    {{user?.type}}\n\n    \n\n    \n                \n                    ./user-card.component.scss\n                \n                .user-avatar {\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    border: 2px solid #ddd;\n}\n\n.card {\n    cursor: pointer;\n}\n\n.user-card {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n}\n\n.github-page {\n    width: 130px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    {{user?.login}}                            Github page                            {{user?.type}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDetailsComponent.html":{"url":"components/UserDetailsComponent.html","title":"component - UserDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/users/user-details/user-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-details\n            \n\n\n\n            \n                styleUrls\n                ./user-details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeTabIndex\n                            \n                            \n                                animateState\n                            \n                            \n                                followers$\n                            \n                            \n                                repositories$\n                            \n                            \n                                    Private\n                                routeParamSubscription\n                            \n                            \n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTabChange\n                            \n                            \n                                showUserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, route: ActivatedRoute, toast: ToastService, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/users/user-details/user-details.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toast\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-details/user-details.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-details/user-details.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTabChange\n                        \n                    \n                \n            \n            \n                \nonTabChange(tabIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-details/user-details.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tabIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserDetails\n                        \n                    \n                \n            \n            \n                \nshowUserDetails(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/users/user-details/user-details.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeTabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animateState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        followers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositories$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        routeParamSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in src/app/users/user-details/user-details.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { HttpParams } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription, switchMap } from 'rxjs';\nimport { GitHubRepository } from 'src/app/core/models/repository';\nimport { User } from 'src/app/core/models/user';\nimport { ToastService } from 'src/app/core/services/toast.service';\nimport { loadFollowers, loadRepositories, loadUser } from 'src/app/core/store/github.actions';\nimport { selectGithubFollowers, selectGithubRepositories, selectGitubUser } from 'src/app/core/store/github.selector';\nimport { slideInAnimation } from 'src/app/layout/animations';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class UserDetailsComponent implements OnInit, OnDestroy {\n  user$ = new Observable();\n  followers$ = new Observable();\n  repositories$ = new Observable();\n  private routeParamSubscription: Subscription | undefined;\n  animateState: string = '';\n  activeTabIndex: number = 0;\n\n  constructor(\n    private store: Store,\n    private route: ActivatedRoute,\n    private toast: ToastService,\n    private router: Router,\n    private location: Location,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.routeParamSubscription = this.route.paramMap.pipe(\n      switchMap(params => {\n        const username = params.get('username');\n        this.animateState = username!;\n        return username ? [username] : [];\n      })\n    ).subscribe(username => {\n      if (username) {\n        this.store.dispatch(loadUser({ username }));\n        this.route.queryParams.subscribe(params => {\n          if (params['tab']) {\n            this.activeTabIndex = parseInt(params['tab'], 10);\n          } \n          this.onTabChange(this.activeTabIndex);\n        });\n      } else {\n        this.toast.error('Error loading user');\n      }\n    });\n\n    this.user$ = this.store.select(selectGitubUser);\n    this.followers$ = this.store.select(selectGithubFollowers);\n    this.repositories$ = this.store.select(selectGithubRepositories)\n  }\n\n  showUserDetails(user: User) {\n    this.router.navigate(['/user', user.login]);\n  }\n\n  onTabChange(tabIndex: number) {\n    const username = this.animateState;\n    tabIndex === 0 \n      ? this.store.dispatch(loadRepositories({ username })) \n      : this.store.dispatch(loadFollowers({ username }));\n    const url = this.location.path();\n    const urlWithoutParams = url.split('?')[0];\n    let currentParams = new HttpParams({ fromString: url.split('?')[1] });\n    currentParams = currentParams.set('tab', tabIndex);\n    const newUrl = urlWithoutParams + '?' + currentParams.toString();\n    this.location.go(newUrl);\n  }\n\n  ngOnDestroy(): void {\n    if (this.routeParamSubscription) {\n      this.routeParamSubscription.unsubscribe();\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        {{user.name}}\n                    \n                    \n                        {{user.login}}\n                    \n                    \n                        \n                    \n                    \n                        \n                            \n                                people\n                                {{user.followers | number}} followers\n                            \n                            \n                                person_add\n                                {{user.following | number}} following\n                            \n                        \n                        \n                            web\n                            {{user.blog}}\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                                \n                                    \n                                \n                            \n                        \n                        \n                            \n                                \n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./user-details.component.scss\n                \n                .profile-image {\n    margin-top: 20px;\n    height: 300px;\n    width: 300px;\n    border-radius: 50%;\n    border: 2px solid #ddd;\n}\n\n.tab-content {\n    height: 100vh;\n    overflow-y: auto;\n    overflow-x: hidden;\n}\n\n\n.following {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n}\n\n.user-details-icon {\n    margin-right: 5px;\n}\n\n@media (max-width: 576px) {\n    .following {\n        flex-direction: column;\n    }\n\n    .following>div {\n        margin-bottom: 10px;\n    }\n\n    a {\n        display: block;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        max-width: 100%;\n    }\n\n    .profile-image {\n        height: 200px;\n        width: 200px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    {{user.name}}                                                                {{user.login}}                                                                                                                                                                                            people                                {{user.followers | number}} followers                                                                                        person_add                                {{user.following | number}} following                                                                                                        web                            {{user.blog}}n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'RepositoryCardComponent', 'selector': 'app-repository-card'},{'name': 'UserCardComponent', 'selector': 'app-user-card'},{'name': 'UserDetailsComponent', 'selector': 'app-user-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/github-state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { GitHubRepository } from \"../models/repository\";\nimport { User } from \"../models/user\";\n\nexport interface GithubState {\n    users: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface UserState {\n    user: User;\n    loading: boolean;\n}\n\nexport interface FollowersState {\n    followers: User[];\n    loading: boolean;\n    error: any;\n}\n\nexport interface RepositoryState {\n    repositories: GitHubRepository[];\n    loading: boolean;\n    error: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: UserDetailsComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/error.interceptor.ts\n            \n            interceptor\n            ErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/github.interceptor.ts\n            \n            interceptor\n            GithubInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            FollowersState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            GithubState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            RepositoryState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/github-state.ts\n            \n            interface\n            UserState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/pagination.ts\n            \n            class\n            PaginatedResult\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/pagination.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/repository.ts\n            \n            interface\n            GitHubRepository\n            \n                0 %\n                (0/80)\n            \n        \n        \n            \n                \n                src/app/core/models/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/40)\n            \n        \n        \n            \n                \n                src/app/core/services/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadFollowers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadFollowersSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadRepositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadRepositoriesSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUsers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUsersFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUsersSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            loadUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.actions.ts\n            \n            variable\n            search\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.effects.ts\n            \n            injectable\n            GithubEffects\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            followersReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            githubReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialFollowersState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialRepositoryState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            initialUserState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            repositoriesReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.reducer.ts\n            \n            variable\n            userReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectFollowersLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGithubFollowers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGithubRepositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGithubUsers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectGitubUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectRepositoriesLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserFollowers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUserRepositories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUsersFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/github.selector.ts\n            \n            variable\n            selectUsersLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/layout/animations.ts\n            \n            variable\n            slideInAnimation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/repository-card/repository-card.component.ts\n            \n            component\n            RepositoryCardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/user-card/user-card.component.ts\n            \n            component\n            UserCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/users/user-details/user-details.component.ts\n            \n            component\n            UserDetailsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/color-picker : ^7.0.1\n        \n            @angular/animations : ~13.3.0\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @ngrx/effects : ^13.2.0\n        \n            @ngrx/entity : ^13.2.0\n        \n            @ngrx/router-store : ^13.2.0\n        \n            @ngrx/store : ^13.2.0\n        \n            @ngrx/store-devtools : ^13.2.0\n        \n            bootstrap : ^5.1.3\n        \n            eslint : ^8.56.0\n        \n            ngx-bootstrap : ^8.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.6.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nGithubitat\nThis is just a quick overview, detailed app documentation can be see using a command \nnpm run compodoc:serve\nThis project was generated with Angular CLI version 13.3.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nApplication Overview\nThis application is a user-friendly platform that allows searching GitHub users by their username. It displays user profiles, including details and lists of repositories and followers. The application emphasizes responsive design, mobile optimization, and incorporates advanced features like dynamic theme switching, state management, and lazy loading.\nGetting Started\nPrerequisites\n\nNode.js (LTS version)\nAngular CLI\nGit (for version control)\n\nInstallation\nClone the repository:\ngit clone githubitat\nNavigate to the project directory:\ncd Githubitat\nInstall dependencies:\nnpm install\nStart the development server:\nng serve\nThe application will be available at http://localhost:4200/.\nBuilding the Application\nDevelopment Build:\nng build\nProduction Build:\nng build --prod\nApplication Features\nUser Search Functionality:\nSearch bar on the homepage.\nReal-time search results as you type \n(dev note: Because of Github API limitations when fetching users debounceTime,distinctUntilChanged and filter (with at least 2 characters) operators are used to filter/limit number of API calls)\nSearch results are displayed on the same page after user hits enter\nAlso, user has an option to click on the item in dropdown list to see details of selected user\nUser Details Page:\nDisplays user details, repositories, and followers.\nAccessible by clicking on a user in the search results.\nResponsive Design:\nOptimized for mobile and desktop viewing.\nTheming:\nSupports light and dark themes.\nTheme toggle implemented in the header.\nState Management:\nUtilizes NgRx for consistent state across the app.\nLazy Loading:\nModules are loaded dynamically to improve performance.\nLoading Indicators:\nSpinners indicate data loading.\nError Handling:\nInterceptors catch and handle API errors.\nAnimated Transitions:\nSmooth page transitions enhance the user experience.\nUnit Testing:\nBasic unit tests provided for key components.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nRepositoryCardComponent\n\nRepositoryCardComponent\n\nAppModule -->\n\nRepositoryCardComponent->AppModule\n\n\n\n\n\nUserCardComponent\n\nUserCardComponent\n\nAppModule -->\n\nUserCardComponent->AppModule\n\n\n\n\n\nUserDetailsComponent\n\nUserDetailsComponent\n\nAppModule -->\n\nUserDetailsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nGithubInterceptor\n\nGithubInterceptor\n\nAppModule -->\n\nGithubInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            followersReducer   (src/.../github.reducer.ts)\n                        \n                        \n                            githubReducer   (src/.../github.reducer.ts)\n                        \n                        \n                            initialFollowersState   (src/.../github.reducer.ts)\n                        \n                        \n                            initialRepositoryState   (src/.../github.reducer.ts)\n                        \n                        \n                            initialState   (src/.../github.reducer.ts)\n                        \n                        \n                            initialUserState   (src/.../github.reducer.ts)\n                        \n                        \n                            loadFollowers   (src/.../github.actions.ts)\n                        \n                        \n                            loadFollowersSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            loadRepositories   (src/.../github.actions.ts)\n                        \n                        \n                            loadRepositoriesSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            loadUser   (src/.../github.actions.ts)\n                        \n                        \n                            loadUsers   (src/.../github.actions.ts)\n                        \n                        \n                            loadUsersFailure   (src/.../github.actions.ts)\n                        \n                        \n                            loadUsersSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            loadUserSuccess   (src/.../github.actions.ts)\n                        \n                        \n                            repositoriesReducer   (src/.../github.reducer.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            search   (src/.../github.actions.ts)\n                        \n                        \n                            selectFollowersLoading   (src/.../github.selector.ts)\n                        \n                        \n                            selectGithubFollowers   (src/.../github.selector.ts)\n                        \n                        \n                            selectGithubRepositories   (src/.../github.selector.ts)\n                        \n                        \n                            selectGithubUsers   (src/.../github.selector.ts)\n                        \n                        \n                            selectGitubUser   (src/.../github.selector.ts)\n                        \n                        \n                            selectRepositoriesLoading   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserFeature   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserFollowers   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserLoading   (src/.../github.selector.ts)\n                        \n                        \n                            selectUserRepositories   (src/.../github.selector.ts)\n                        \n                        \n                            selectUsersFeature   (src/.../github.selector.ts)\n                        \n                        \n                            selectUsersLoading   (src/.../github.selector.ts)\n                        \n                        \n                            slideInAnimation   (src/.../animations.ts)\n                        \n                        \n                            userReducer   (src/.../github.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  token: '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',\n  baseUrl:'https://api.github.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  token: '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',\n  baseUrl:'https://api.github.com'\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/github.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        followersReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialFollowersState,\n  on(loadFollowers, state => ({ ...state, loading: true })),\n  on(loadFollowersSuccess, (state, { followers }) => ({ ...state, loading: false, followers: followers })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        githubReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(loadUsers, state => ({ ...state, loading: true })),\n  on(search, state => ({ ...state, loading: true })),\n  on(loadUsersSuccess, (state, { users }) => ({ ...state, loading: false, users: users })),\n  on(loadUsersFailure, (state, { error }) => ({ ...state, loading: false, error })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialFollowersState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FollowersState\n\n                    \n                \n                \n                    \n                        Default value : {\n  followers: [],\n  loading: false,\n  error: null\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialRepositoryState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RepositoryState\n\n                    \n                \n                \n                    \n                        Default value : {\n  repositories: [],\n  loading: false,\n  error: null\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersState\n\n                    \n                \n                \n                    \n                        Default value : {\n  users: [],\n  loading: false,\n  error: null\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialUserState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: {\n    login: '',\n    id: 0,\n    node_id: '',\n    avatar_url: '',\n    gravatar_id: '',\n    url: '',\n    html_url: '',\n    followers_url: '',\n    following_url: '',\n    gists_url: '',\n    starred_url: '',\n    subscriptions_url: '',\n    organizations_url: '',\n    repos_url: '',\n    events_url: '',\n    received_events_url: '',\n    type: '',\n    site_admin: false,\n    name: '',\n    company: '',\n    blog: '',\n    location: '',\n    email: '',\n    hireable: false,\n    bio: '',\n    twitter_username: '',\n    public_repos: 0,\n    public_gists: 0,\n    followers: 0,\n    following: 0,\n    created_at: '',\n    updated_at: '',\n    private_gists: 0,\n    total_private_repos: 0,\n    owned_private_repos: 0,\n    disk_usage: 0,\n    collaborators: 0,\n    two_factor_authentication: false,\n    plan: {\n      name: '',\n      space: 0,\n      private_repos: 0,\n      collaborators: 0\n    }\n  },\n  loading: false,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repositoriesReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialRepositoryState,\n  on(loadRepositories, state => ({ ...state, loading: true })),\n  on(loadRepositoriesSuccess, (state, { repositories }) => ({ ...state, loading: false, repositories: repositories })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialUserState,\n  on(loadUser, state => ({ ...state, loading: true })),\n  on(loadUserSuccess, (state, { user }) => ({ ...state, loading: false, user: user })),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/github.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loadFollowers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Followers',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadFollowersSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Followers Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Repositories',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRepositoriesSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Repositories Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load User',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsersFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users Failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUsersSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Load Users Success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[GitHub API] Search Users',\n  props()\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/github.selector.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectFollowersLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFollowers,\n  (state: FollowersState) => state.loading\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGithubFollowers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFollowers,\n  (state: FollowersState) => state.followers,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGithubRepositories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserRepositories,\n  (state: RepositoryState) => state.repositories,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGithubUsers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUsersFeature,\n  (state: GithubState) => state.users,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGitubUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFeature,\n  (state: UserState) => state.user,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRepositoriesLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserRepositories,\n  (state: RepositoryState) => state.loading\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.user\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserFollowers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.followers\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUserFeature,\n  (state: UserState) => state.loading\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUserRepositories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.repositories\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUsersFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: any) => state.github\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUsersLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectUsersFeature,\n  (state: GithubState) => state.loading\n)\n                    \n                \n\n\n        \n    \n\n    src/app/layout/animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slideInAnimation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : trigger('slideInAnimation', [\n  transition(':enter', [\n    style({ transform: 'translateX(100%)' }),\n    animate('0.5s ease-in', style({ transform: 'translateX(0)' }))\n  ]),\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
